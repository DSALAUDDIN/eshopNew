<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/about/page.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/about/page.tsx" />
              <option name="originalContent" value="'use client'&#10;&#10;import { useState, useEffect } from 'react'&#10;import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'&#10;&#10;export default function AboutPage() {&#10;  const [content, setContent] = useState&lt;any&gt;(null)&#10;  const [loading, setLoading] = useState(true)&#10;&#10;  useEffect(() =&gt; {&#10;    fetchContent()&#10;  }, [])&#10;&#10;  const fetchContent = async () =&gt; {&#10;    try {&#10;      const response = await fetch('/api/footer')&#10;      if (response.ok) {&#10;        const data = await response.json()&#10;        const aboutContent = data.content.find((item: any) =&gt; item.slug === 'about')&#10;        setContent(aboutContent)&#10;      }&#10;    } catch (error) {&#10;      console.error('Error fetching content:', error)&#10;    } finally {&#10;      setLoading(false)&#10;    }&#10;  }&#10;&#10;  if (loading) {&#10;    return (&#10;      &lt;div className=&quot;min-h-screen bg-gray-50 flex items-center justify-center&quot;&gt;&#10;        &lt;div className=&quot;animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600&quot;&gt;&lt;/div&gt;&#10;      &lt;/div&gt;&#10;    )&#10;  }&#10;&#10;  return (&#10;    &lt;div className=&quot;min-h-screen bg-gray-50&quot;&gt;&#10;      &lt;div className=&quot;container mx-auto px-4 py-12&quot;&gt;&#10;        &lt;Card className=&quot;max-w-4xl mx-auto&quot;&gt;&#10;          &lt;CardHeader&gt;&#10;            &lt;CardTitle className=&quot;text-3xl font-bold text-center&quot;&gt;&#10;              {content?.title || 'Our Story'}&#10;            &lt;/CardTitle&gt;&#10;          &lt;/CardHeader&gt;&#10;          &lt;CardContent className=&quot;prose max-w-none&quot;&gt;&#10;            &lt;div&#10;              dangerouslySetInnerHTML={{&#10;                __html: content?.content || `&#10;                  &lt;h2&gt;About Southern Fashion &amp; Décor&lt;/h2&gt;&#10;                  &lt;p&gt;Welcome to Southern Fashion &amp; Décor, your premier destination for exquisite fashion and home décor items in Bangladesh.&lt;/p&gt;&#10;                  &#10;                  &lt;h3&gt;Our Journey&lt;/h3&gt;&#10;                  &lt;p&gt;Founded with a passion for bringing beautiful, high-quality products to Bangladesh, Southern Fashion &amp; Décor has been serving customers since our inception. We believe that everyone deserves access to stylish, affordable fashion and home décor that reflects their personality and lifestyle.&lt;/p&gt;&#10;                  &#10;                  &lt;h3&gt;Our Mission&lt;/h3&gt;&#10;                  &lt;p&gt;To provide our customers with an exceptional shopping experience through:&lt;/p&gt;&#10;                  &lt;ul&gt;&#10;                    &lt;li&gt;Carefully curated fashion and home décor collections&lt;/li&gt;&#10;                    &lt;li&gt;Competitive pricing and excellent value&lt;/li&gt;&#10;                    &lt;li&gt;Outstanding customer service&lt;/li&gt;&#10;                    &lt;li&gt;Fast and reliable delivery across Bangladesh&lt;/li&gt;&#10;                  &lt;/ul&gt;&#10;                  &#10;                  &lt;h3&gt;What We Offer&lt;/h3&gt;&#10;                  &lt;ul&gt;&#10;                    &lt;li&gt;&lt;strong&gt;Fashion:&lt;/strong&gt; Men's, women's, and children's clothing and accessories&lt;/li&gt;&#10;                    &lt;li&gt;&lt;strong&gt;Home Décor:&lt;/strong&gt; Furniture, decorative items, and home accessories&lt;/li&gt;&#10;                    &lt;li&gt;&lt;strong&gt;Footwear:&lt;/strong&gt; Stylish and comfortable shoes for all occasions&lt;/li&gt;&#10;                    &lt;li&gt;&lt;strong&gt;Special Collections:&lt;/strong&gt; Seasonal and trending items&lt;/li&gt;&#10;                  &lt;/ul&gt;&#10;                  &#10;                  &lt;h3&gt;Our Commitment&lt;/h3&gt;&#10;                  &lt;p&gt;We are committed to sustainability, ethical business practices, and supporting local artisans and manufacturers. Every purchase you make helps support our mission to bring quality products while maintaining responsible business practices.&lt;/p&gt;&#10;                `&#10;              }}&#10;            /&gt;&#10;          &lt;/CardContent&gt;&#10;        &lt;/Card&gt;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  )&#10;}&#10;" />
              <option name="updatedContent" value="'use client'&#10;&#10;import FooterPageTemplate from '@/components/FooterPageTemplate'&#10;&#10;export default function AboutPage() {&#10;  const fallbackContent = `&#10;    &lt;h2&gt;About Southern Fashion &amp; Décor&lt;/h2&gt;&#10;    &lt;p&gt;Welcome to Southern Fashion &amp; Décor, your premier destination for exquisite fashion and home décor items in Bangladesh.&lt;/p&gt;&#10;    &#10;    &lt;h3&gt;Our Journey&lt;/h3&gt;&#10;    &lt;p&gt;Founded with a passion for bringing beautiful, high-quality products to Bangladesh, Southern Fashion &amp; Décor has been serving customers since our inception. We believe that everyone deserves access to stylish, affordable fashion and home décor that reflects their personality and lifestyle.&lt;/p&gt;&#10;    &#10;    &lt;h3&gt;Our Mission&lt;/h3&gt;&#10;    &lt;p&gt;To provide our customers with an exceptional shopping experience through:&lt;/p&gt;&#10;    &lt;ul&gt;&#10;      &lt;li&gt;Carefully curated fashion and home décor collections&lt;/li&gt;&#10;      &lt;li&gt;Competitive pricing and excellent value&lt;/li&gt;&#10;      &lt;li&gt;Outstanding customer service&lt;/li&gt;&#10;      &lt;li&gt;Fast and reliable delivery across Bangladesh&lt;/li&gt;&#10;    &lt;/ul&gt;&#10;    &#10;    &lt;h3&gt;What We Offer&lt;/h3&gt;&#10;    &lt;ul&gt;&#10;      &lt;li&gt;&lt;strong&gt;Fashion:&lt;/strong&gt; Men's, women's, and children's clothing and accessories&lt;/li&gt;&#10;      &lt;li&gt;&lt;strong&gt;Home Décor:&lt;/strong&gt; Furniture, decorative items, and home accessories&lt;/li&gt;&#10;      &lt;li&gt;&lt;strong&gt;Footwear:&lt;/strong&gt; Stylish and comfortable shoes for all occasions&lt;/li&gt;&#10;      &lt;li&gt;&lt;strong&gt;Special Collections:&lt;/strong&gt; Seasonal and trending items&lt;/li&gt;&#10;    &lt;/ul&gt;&#10;    &#10;    &lt;h3&gt;Our Commitment&lt;/h3&gt;&#10;    &lt;p&gt;We are committed to sustainability, ethical business practices, and supporting local artisans and manufacturers. Every purchase you make helps support our mission to bring quality products while maintaining responsible business practices.&lt;/p&gt;&#10;  `&#10;&#10;  return (&#10;    &lt;FooterPageTemplate &#10;      slug=&quot;about&quot;&#10;      fallbackTitle=&quot;Our Story&quot;&#10;      fallbackContent={fallbackContent}&#10;    /&gt;&#10;  )&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/admin/footer/page.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/admin/footer/page.tsx" />
              <option name="originalContent" value="&#10;" />
              <option name="updatedContent" value="'use client'&#10;&#10;import { useState, useEffect } from 'react'&#10;import { Button } from '@/components/ui/button'&#10;import { Input } from '@/components/ui/input'&#10;import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'&#10;import { Badge } from '@/components/ui/badge'&#10;import {&#10;  Table,&#10;  TableBody,&#10;  TableCell,&#10;  TableHead,&#10;  TableHeader,&#10;  TableRow&#10;} from '@/components/ui/table'&#10;import {&#10;  Dialog,&#10;  DialogContent,&#10;  DialogHeader,&#10;  DialogTitle,&#10;  DialogTrigger&#10;} from '@/components/ui/dialog'&#10;import {&#10;  Select,&#10;  SelectContent,&#10;  SelectItem,&#10;  SelectTrigger,&#10;  SelectValue,&#10;} from '@/components/ui/select'&#10;import { Label } from '@/components/ui/label'&#10;import { Textarea } from '@/components/ui/textarea'&#10;import { Switch } from '@/components/ui/switch'&#10;import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'&#10;import {&#10;  Plus,&#10;  Edit,&#10;  Trash2,&#10;  Upload,&#10;  X,&#10;  Globe,&#10;  FileText,&#10;  Share2,&#10;  CreditCard&#10;} from 'lucide-react'&#10;&#10;export default function AdminFooter() {&#10;  const [footerData, setFooterData] = useState&lt;any&gt;({ content: [], socialLinks: [], paymentMethods: [] })&#10;  const [loading, setLoading] = useState(true)&#10;  const [showContentModal, setShowContentModal] = useState(false)&#10;  const [showSocialModal, setShowSocialModal] = useState(false)&#10;  const [showPaymentModal, setShowPaymentModal] = useState(false)&#10;  const [editingItem, setEditingItem] = useState&lt;any&gt;(null)&#10;  const [activeTab, setActiveTab] = useState('content')&#10;&#10;  const [contentForm, setContentForm] = useState({&#10;    slug: '',&#10;    title: '',&#10;    content: '',&#10;    section: 'help',&#10;    isActive: true&#10;  })&#10;&#10;  const [socialForm, setSocialForm] = useState({&#10;    platform: '',&#10;    url: '',&#10;    icon: '',&#10;    isActive: true&#10;  })&#10;&#10;  const [paymentForm, setPaymentForm] = useState({&#10;    name: '',&#10;    image: '',&#10;    isActive: true&#10;  })&#10;&#10;  useEffect(() =&gt; {&#10;    fetchFooterData()&#10;  }, [])&#10;&#10;  const fetchFooterData = async () =&gt; {&#10;    try {&#10;      const token = localStorage.getItem('adminToken')&#10;      const response = await fetch('/api/admin/footer', {&#10;        headers: {&#10;          'Authorization': `Bearer ${token}`&#10;        }&#10;      })&#10;&#10;      if (response.ok) {&#10;        const data = await response.json()&#10;        setFooterData(data)&#10;      }&#10;    } catch (error) {&#10;      console.error('Error fetching footer data:', error)&#10;    } finally {&#10;      setLoading(false)&#10;    }&#10;  }&#10;&#10;  const handleCreateContent = async () =&gt; {&#10;    try {&#10;      const token = localStorage.getItem('adminToken')&#10;      const response = await fetch('/api/admin/footer', {&#10;        method: 'POST',&#10;        headers: {&#10;          'Content-Type': 'application/json',&#10;          'Authorization': `Bearer ${token}`&#10;        },&#10;        body: JSON.stringify({ type: 'content', data: contentForm })&#10;      })&#10;&#10;      if (response.ok) {&#10;        setShowContentModal(false)&#10;        resetContentForm()&#10;        fetchFooterData()&#10;      }&#10;    } catch (error) {&#10;      console.error('Error creating content:', error)&#10;    }&#10;  }&#10;&#10;  const handleUpdateContent = async () =&gt; {&#10;    try {&#10;      const token = localStorage.getItem('adminToken')&#10;      const response = await fetch(`/api/admin/footer/${editingItem.id}`, {&#10;        method: 'PUT',&#10;        headers: {&#10;          'Content-Type': 'application/json',&#10;          'Authorization': `Bearer ${token}`&#10;        },&#10;        body: JSON.stringify({ type: 'content', data: contentForm })&#10;      })&#10;&#10;      if (response.ok) {&#10;        setShowContentModal(false)&#10;        setEditingItem(null)&#10;        resetContentForm()&#10;        fetchFooterData()&#10;      }&#10;    } catch (error) {&#10;      console.error('Error updating content:', error)&#10;    }&#10;  }&#10;&#10;  const handleDeleteItem = async (id: string, type: string) =&gt; {&#10;    if (confirm('Are you sure you want to delete this item?')) {&#10;      try {&#10;        const token = localStorage.getItem('adminToken')&#10;        const response = await fetch(`/api/admin/footer/${id}`, {&#10;          method: 'DELETE',&#10;          headers: {&#10;            'Content-Type': 'application/json',&#10;            'Authorization': `Bearer ${token}`&#10;          },&#10;          body: JSON.stringify({ type })&#10;        })&#10;&#10;        if (response.ok) {&#10;          fetchFooterData()&#10;        }&#10;      } catch (error) {&#10;        console.error('Error deleting item:', error)&#10;      }&#10;    }&#10;  }&#10;&#10;  const resetContentForm = () =&gt; {&#10;    setContentForm({&#10;      slug: '',&#10;      title: '',&#10;      content: '',&#10;      section: 'help',&#10;      isActive: true&#10;    })&#10;  }&#10;&#10;  const resetSocialForm = () =&gt; {&#10;    setSocialForm({&#10;      platform: '',&#10;      url: '',&#10;      icon: '',&#10;      isActive: true&#10;    })&#10;  }&#10;&#10;  const resetPaymentForm = () =&gt; {&#10;    setPaymentForm({&#10;      name: '',&#10;      image: '',&#10;      isActive: true&#10;    })&#10;  }&#10;&#10;  const openEditContentModal = (content: any) =&gt; {&#10;    setEditingItem(content)&#10;    setContentForm({&#10;      slug: content.slug,&#10;      title: content.title,&#10;      content: content.content,&#10;      section: content.section,&#10;      isActive: content.isActive&#10;    })&#10;    setShowContentModal(true)&#10;  }&#10;&#10;  if (loading) {&#10;    return (&#10;      &lt;div className=&quot;p-6 flex items-center justify-center&quot;&gt;&#10;        &lt;div className=&quot;animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600&quot;&gt;&lt;/div&gt;&#10;      &lt;/div&gt;&#10;    )&#10;  }&#10;&#10;  return (&#10;    &lt;div className=&quot;p-6 space-y-6&quot;&gt;&#10;      &lt;div className=&quot;flex justify-between items-center&quot;&gt;&#10;        &lt;h1 className=&quot;text-3xl font-bold&quot;&gt;Footer Content Management&lt;/h1&gt;&#10;      &lt;/div&gt;&#10;&#10;      &lt;Tabs value={activeTab} onValueChange={setActiveTab} className=&quot;w-full&quot;&gt;&#10;        &lt;TabsList className=&quot;grid w-full grid-cols-3&quot;&gt;&#10;          &lt;TabsTrigger value=&quot;content&quot; className=&quot;flex items-center gap-2&quot;&gt;&#10;            &lt;FileText className=&quot;h-4 w-4&quot; /&gt;&#10;            Page Content&#10;          &lt;/TabsTrigger&gt;&#10;          &lt;TabsTrigger value=&quot;social&quot; className=&quot;flex items-center gap-2&quot;&gt;&#10;            &lt;Share2 className=&quot;h-4 w-4&quot; /&gt;&#10;            Social Links&#10;          &lt;/TabsTrigger&gt;&#10;          &lt;TabsTrigger value=&quot;payment&quot; className=&quot;flex items-center gap-2&quot;&gt;&#10;            &lt;CreditCard className=&quot;h-4 w-4&quot; /&gt;&#10;            Payment Methods&#10;          &lt;/TabsTrigger&gt;&#10;        &lt;/TabsList&gt;&#10;&#10;        {/* Footer Content Tab */}&#10;        &lt;TabsContent value=&quot;content&quot; className=&quot;space-y-6&quot;&gt;&#10;          &lt;Card&gt;&#10;            &lt;CardHeader className=&quot;flex flex-row items-center justify-between&quot;&gt;&#10;              &lt;CardTitle&gt;Footer Pages Content&lt;/CardTitle&gt;&#10;              &lt;Dialog open={showContentModal} onOpenChange={setShowContentModal}&gt;&#10;                &lt;DialogTrigger asChild&gt;&#10;                  &lt;Button onClick={resetContentForm}&gt;&#10;                    &lt;Plus className=&quot;h-4 w-4 mr-2&quot; /&gt;&#10;                    Add Page Content&#10;                  &lt;/Button&gt;&#10;                &lt;/DialogTrigger&gt;&#10;                &lt;DialogContent className=&quot;max-w-4xl max-h-[90vh] overflow-y-auto&quot;&gt;&#10;                  &lt;DialogHeader&gt;&#10;                    &lt;DialogTitle&gt;&#10;                      {editingItem ? 'Edit Page Content' : 'Add New Page Content'}&#10;                    &lt;/DialogTitle&gt;&#10;                  &lt;/DialogHeader&gt;&#10;&#10;                  &lt;div className=&quot;space-y-4&quot;&gt;&#10;                    &lt;div className=&quot;grid grid-cols-2 gap-4&quot;&gt;&#10;                      &lt;div className=&quot;space-y-2&quot;&gt;&#10;                        &lt;Label htmlFor=&quot;slug&quot;&gt;Page Slug *&lt;/Label&gt;&#10;                        &lt;Input&#10;                          id=&quot;slug&quot;&#10;                          value={contentForm.slug}&#10;                          onChange={(e) =&gt; setContentForm(prev =&gt; ({...prev, slug: e.target.value}))}&#10;                          placeholder=&quot;e.g., contact, about, terms&quot;&#10;                          disabled={!!editingItem}&#10;                        /&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      &lt;div className=&quot;space-y-2&quot;&gt;&#10;                        &lt;Label htmlFor=&quot;section&quot;&gt;Section&lt;/Label&gt;&#10;                        &lt;Select&#10;                          value={contentForm.section}&#10;                          onValueChange={(value) =&gt; setContentForm(prev =&gt; ({...prev, section: value}))}&#10;                        &gt;&#10;                          &lt;SelectTrigger&gt;&#10;                            &lt;SelectValue /&gt;&#10;                          &lt;/SelectTrigger&gt;&#10;                          &lt;SelectContent&gt;&#10;                            &lt;SelectItem value=&quot;help&quot;&gt;Help&lt;/SelectItem&gt;&#10;                            &lt;SelectItem value=&quot;about&quot;&gt;About Us&lt;/SelectItem&gt;&#10;                            &lt;SelectItem value=&quot;social&quot;&gt;Social&lt;/SelectItem&gt;&#10;                            &lt;SelectItem value=&quot;other&quot;&gt;Other&lt;/SelectItem&gt;&#10;                          &lt;/SelectContent&gt;&#10;                        &lt;/Select&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;div className=&quot;space-y-2&quot;&gt;&#10;                      &lt;Label htmlFor=&quot;title&quot;&gt;Page Title *&lt;/Label&gt;&#10;                      &lt;Input&#10;                        id=&quot;title&quot;&#10;                        value={contentForm.title}&#10;                        onChange={(e) =&gt; setContentForm(prev =&gt; ({...prev, title: e.target.value}))}&#10;                        placeholder=&quot;Enter page title&quot;&#10;                      /&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;div className=&quot;space-y-2&quot;&gt;&#10;                      &lt;Label htmlFor=&quot;content&quot;&gt;Content (HTML supported) *&lt;/Label&gt;&#10;                      &lt;Textarea&#10;                        id=&quot;content&quot;&#10;                        value={contentForm.content}&#10;                        onChange={(e) =&gt; setContentForm(prev =&gt; ({...prev, content: e.target.value}))}&#10;                        placeholder=&quot;Enter page content with HTML markup&quot;&#10;                        rows={15}&#10;                        className=&quot;font-mono&quot;&#10;                      /&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;div className=&quot;flex items-center space-x-2&quot;&gt;&#10;                      &lt;Switch&#10;                        id=&quot;isActive&quot;&#10;                        checked={contentForm.isActive}&#10;                        onCheckedChange={(checked) =&gt; setContentForm(prev =&gt; ({...prev, isActive: checked}))}&#10;                      /&gt;&#10;                      &lt;Label htmlFor=&quot;isActive&quot;&gt;Active&lt;/Label&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;div className=&quot;flex justify-end gap-2 pt-4&quot;&gt;&#10;                      &lt;Button&#10;                        variant=&quot;outline&quot;&#10;                        onClick={() =&gt; {&#10;                          setShowContentModal(false)&#10;                          setEditingItem(null)&#10;                          resetContentForm()&#10;                        }}&#10;                      &gt;&#10;                        Cancel&#10;                      &lt;/Button&gt;&#10;                      &lt;Button&#10;                        onClick={editingItem ? handleUpdateContent : handleCreateContent}&#10;                        disabled={!contentForm.slug || !contentForm.title || !contentForm.content}&#10;                      &gt;&#10;                        {editingItem ? 'Update Content' : 'Create Content'}&#10;                      &lt;/Button&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/DialogContent&gt;&#10;              &lt;/Dialog&gt;&#10;            &lt;/CardHeader&gt;&#10;            &lt;CardContent&gt;&#10;              &lt;div className=&quot;overflow-x-auto&quot;&gt;&#10;                &lt;Table&gt;&#10;                  &lt;TableHeader&gt;&#10;                    &lt;TableRow&gt;&#10;                      &lt;TableHead&gt;Page&lt;/TableHead&gt;&#10;                      &lt;TableHead&gt;Section&lt;/TableHead&gt;&#10;                      &lt;TableHead&gt;Status&lt;/TableHead&gt;&#10;                      &lt;TableHead&gt;Updated&lt;/TableHead&gt;&#10;                      &lt;TableHead&gt;Actions&lt;/TableHead&gt;&#10;                    &lt;/TableRow&gt;&#10;                  &lt;/TableHeader&gt;&#10;                  &lt;TableBody&gt;&#10;                    {footerData.content.map((content: any) =&gt; (&#10;                      &lt;TableRow key={content.id}&gt;&#10;                        &lt;TableCell&gt;&#10;                          &lt;div&gt;&#10;                            &lt;p className=&quot;font-medium&quot;&gt;{content.title}&lt;/p&gt;&#10;                            &lt;p className=&quot;text-sm text-gray-500&quot;&gt;/{content.slug}&lt;/p&gt;&#10;                          &lt;/div&gt;&#10;                        &lt;/TableCell&gt;&#10;                        &lt;TableCell&gt;&#10;                          &lt;Badge variant=&quot;outline&quot;&gt;{content.section}&lt;/Badge&gt;&#10;                        &lt;/TableCell&gt;&#10;                        &lt;TableCell&gt;&#10;                          &lt;Badge variant={content.isActive ? &quot;default&quot; : &quot;secondary&quot;}&gt;&#10;                            {content.isActive ? 'Active' : 'Inactive'}&#10;                          &lt;/Badge&gt;&#10;                        &lt;/TableCell&gt;&#10;                        &lt;TableCell&gt;&#10;                          {new Date(content.updatedAt).toLocaleDateString()}&#10;                        &lt;/TableCell&gt;&#10;                        &lt;TableCell&gt;&#10;                          &lt;div className=&quot;flex gap-2&quot;&gt;&#10;                            &lt;Button size=&quot;sm&quot; variant=&quot;outline&quot; onClick={() =&gt; openEditContentModal(content)}&gt;&#10;                              &lt;Edit className=&quot;h-4 w-4&quot; /&gt;&#10;                            &lt;/Button&gt;&#10;                            &lt;Button&#10;                              size=&quot;sm&quot;&#10;                              variant=&quot;outline&quot;&#10;                              onClick={() =&gt; handleDeleteItem(content.id, 'content')}&#10;                            &gt;&#10;                              &lt;Trash2 className=&quot;h-4 w-4&quot; /&gt;&#10;                            &lt;/Button&gt;&#10;                          &lt;/div&gt;&#10;                        &lt;/TableCell&gt;&#10;                      &lt;/TableRow&gt;&#10;                    ))}&#10;                    {footerData.content.length === 0 &amp;&amp; (&#10;                      &lt;TableRow&gt;&#10;                        &lt;TableCell colSpan={5} className=&quot;text-center py-8&quot;&gt;&#10;                          &lt;div className=&quot;flex flex-col items-center gap-2&quot;&gt;&#10;                            &lt;FileText className=&quot;h-12 w-12 text-gray-400&quot; /&gt;&#10;                            &lt;p className=&quot;text-gray-500&quot;&gt;No footer content found&lt;/p&gt;&#10;                            &lt;Button size=&quot;sm&quot; onClick={() =&gt; setShowContentModal(true)}&gt;&#10;                              Create your first page&#10;                            &lt;/Button&gt;&#10;                          &lt;/div&gt;&#10;                        &lt;/TableCell&gt;&#10;                      &lt;/TableRow&gt;&#10;                    )}&#10;                  &lt;/TableBody&gt;&#10;                &lt;/Table&gt;&#10;              &lt;/div&gt;&#10;            &lt;/CardContent&gt;&#10;          &lt;/Card&gt;&#10;        &lt;/TabsContent&gt;&#10;&#10;        {/* Social Links Tab */}&#10;        &lt;TabsContent value=&quot;social&quot; className=&quot;space-y-6&quot;&gt;&#10;          &lt;Card&gt;&#10;            &lt;CardHeader className=&quot;flex flex-row items-center justify-between&quot;&gt;&#10;              &lt;CardTitle&gt;Social Media Links&lt;/CardTitle&gt;&#10;              &lt;Dialog open={showSocialModal} onOpenChange={setShowSocialModal}&gt;&#10;                &lt;DialogTrigger asChild&gt;&#10;                  &lt;Button onClick={resetSocialForm}&gt;&#10;                    &lt;Plus className=&quot;h-4 w-4 mr-2&quot; /&gt;&#10;                    Add Social Link&#10;                  &lt;/Button&gt;&#10;                &lt;/DialogTrigger&gt;&#10;                &lt;DialogContent&gt;&#10;                  &lt;DialogHeader&gt;&#10;                    &lt;DialogTitle&gt;Add Social Media Link&lt;/DialogTitle&gt;&#10;                  &lt;/DialogHeader&gt;&#10;&#10;                  &lt;div className=&quot;space-y-4&quot;&gt;&#10;                    &lt;div className=&quot;space-y-2&quot;&gt;&#10;                      &lt;Label htmlFor=&quot;platform&quot;&gt;Platform *&lt;/Label&gt;&#10;                      &lt;Select&#10;                        value={socialForm.platform}&#10;                        onValueChange={(value) =&gt; setSocialForm(prev =&gt; ({...prev, platform: value}))}&#10;                      &gt;&#10;                        &lt;SelectTrigger&gt;&#10;                          &lt;SelectValue placeholder=&quot;Select platform&quot; /&gt;&#10;                        &lt;/SelectTrigger&gt;&#10;                        &lt;SelectContent&gt;&#10;                          &lt;SelectItem value=&quot;facebook&quot;&gt;Facebook&lt;/SelectItem&gt;&#10;                          &lt;SelectItem value=&quot;instagram&quot;&gt;Instagram&lt;/SelectItem&gt;&#10;                          &lt;SelectItem value=&quot;twitter&quot;&gt;Twitter&lt;/SelectItem&gt;&#10;                          &lt;SelectItem value=&quot;linkedin&quot;&gt;LinkedIn&lt;/SelectItem&gt;&#10;                          &lt;SelectItem value=&quot;youtube&quot;&gt;YouTube&lt;/SelectItem&gt;&#10;                          &lt;SelectItem value=&quot;tiktok&quot;&gt;TikTok&lt;/SelectItem&gt;&#10;                        &lt;/SelectContent&gt;&#10;                      &lt;/Select&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;div className=&quot;space-y-2&quot;&gt;&#10;                      &lt;Label htmlFor=&quot;url&quot;&gt;URL *&lt;/Label&gt;&#10;                      &lt;Input&#10;                        id=&quot;url&quot;&#10;                        value={socialForm.url}&#10;                        onChange={(e) =&gt; setSocialForm(prev =&gt; ({...prev, url: e.target.value}))}&#10;                        placeholder=&quot;https://facebook.com/yourpage&quot;&#10;                        type=&quot;url&quot;&#10;                      /&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;div className=&quot;space-y-2&quot;&gt;&#10;                      &lt;Label htmlFor=&quot;icon&quot;&gt;Icon (emoji or text)&lt;/Label&gt;&#10;                      &lt;Input&#10;                        id=&quot;icon&quot;&#10;                        value={socialForm.icon}&#10;                        onChange={(e) =&gt; setSocialForm(prev =&gt; ({...prev, icon: e.target.value}))}&#10;                        placeholder=&quot;f (for Facebook), i (for Instagram), etc.&quot;&#10;                      /&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;div className=&quot;flex items-center space-x-2&quot;&gt;&#10;                      &lt;Switch&#10;                        id=&quot;socialActive&quot;&#10;                        checked={socialForm.isActive}&#10;                        onCheckedChange={(checked) =&gt; setSocialForm(prev =&gt; ({...prev, isActive: checked}))}&#10;                      /&gt;&#10;                      &lt;Label htmlFor=&quot;socialActive&quot;&gt;Active&lt;/Label&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;div className=&quot;flex justify-end gap-2 pt-4&quot;&gt;&#10;                      &lt;Button variant=&quot;outline&quot; onClick={() =&gt; setShowSocialModal(false)}&gt;&#10;                        Cancel&#10;                      &lt;/Button&gt;&#10;                      &lt;Button&#10;                        onClick={async () =&gt; {&#10;                          try {&#10;                            const token = localStorage.getItem('adminToken')&#10;                            const response = await fetch('/api/admin/footer', {&#10;                              method: 'POST',&#10;                              headers: {&#10;                                'Content-Type': 'application/json',&#10;                                'Authorization': `Bearer ${token}`&#10;                              },&#10;                              body: JSON.stringify({ type: 'social', data: socialForm })&#10;                            })&#10;                            if (response.ok) {&#10;                              setShowSocialModal(false)&#10;                              resetSocialForm()&#10;                              fetchFooterData()&#10;                            }&#10;                          } catch (error) {&#10;                            console.error('Error creating social link:', error)&#10;                          }&#10;                        }}&#10;                        disabled={!socialForm.platform || !socialForm.url}&#10;                      &gt;&#10;                        Add Social Link&#10;                      &lt;/Button&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/DialogContent&gt;&#10;              &lt;/Dialog&gt;&#10;            &lt;/CardHeader&gt;&#10;            &lt;CardContent&gt;&#10;              &lt;div className=&quot;overflow-x-auto&quot;&gt;&#10;                &lt;Table&gt;&#10;                  &lt;TableHeader&gt;&#10;                    &lt;TableRow&gt;&#10;                      &lt;TableHead&gt;Platform&lt;/TableHead&gt;&#10;                      &lt;TableHead&gt;URL&lt;/TableHead&gt;&#10;                      &lt;TableHead&gt;Icon&lt;/TableHead&gt;&#10;                      &lt;TableHead&gt;Status&lt;/TableHead&gt;&#10;                      &lt;TableHead&gt;Actions&lt;/TableHead&gt;&#10;                    &lt;/TableRow&gt;&#10;                  &lt;/TableHeader&gt;&#10;                  &lt;TableBody&gt;&#10;                    {footerData.socialLinks.map((link: any) =&gt; (&#10;                      &lt;TableRow key={link.id}&gt;&#10;                        &lt;TableCell className=&quot;font-medium capitalize&quot;&gt;{link.platform}&lt;/TableCell&gt;&#10;                        &lt;TableCell&gt;&#10;                          &lt;a href={link.url} target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; className=&quot;text-blue-600 hover:underline&quot;&gt;&#10;                            {link.url}&#10;                          &lt;/a&gt;&#10;                        &lt;/TableCell&gt;&#10;                        &lt;TableCell&gt;{link.icon || '-'}&lt;/TableCell&gt;&#10;                        &lt;TableCell&gt;&#10;                          &lt;Badge variant={link.isActive ? &quot;default&quot; : &quot;secondary&quot;}&gt;&#10;                            {link.isActive ? 'Active' : 'Inactive'}&#10;                          &lt;/Badge&gt;&#10;                        &lt;/TableCell&gt;&#10;                        &lt;TableCell&gt;&#10;                          &lt;div className=&quot;flex gap-2&quot;&gt;&#10;                            &lt;Button size=&quot;sm&quot; variant=&quot;outline&quot;&gt;&#10;                              &lt;Edit className=&quot;h-4 w-4&quot; /&gt;&#10;                            &lt;/Button&gt;&#10;                            &lt;Button&#10;                              size=&quot;sm&quot;&#10;                              variant=&quot;outline&quot;&#10;                              onClick={() =&gt; handleDeleteItem(link.id, 'social')}&#10;                            &gt;&#10;                              &lt;Trash2 className=&quot;h-4 w-4&quot; /&gt;&#10;                            &lt;/Button&gt;&#10;                          &lt;/div&gt;&#10;                        &lt;/TableCell&gt;&#10;                      &lt;/TableRow&gt;&#10;                    ))}&#10;                    {footerData.socialLinks.length === 0 &amp;&amp; (&#10;                      &lt;TableRow&gt;&#10;                        &lt;TableCell colSpan={5} className=&quot;text-center py-8&quot;&gt;&#10;                          &lt;div className=&quot;flex flex-col items-center gap-2&quot;&gt;&#10;                            &lt;Share2 className=&quot;h-12 w-12 text-gray-400&quot; /&gt;&#10;                            &lt;p className=&quot;text-gray-500&quot;&gt;No social links found&lt;/p&gt;&#10;                            &lt;Button size=&quot;sm&quot; onClick={() =&gt; setShowSocialModal(true)}&gt;&#10;                              Add your first social link&#10;                            &lt;/Button&gt;&#10;                          &lt;/div&gt;&#10;                        &lt;/TableCell&gt;&#10;                      &lt;/TableRow&gt;&#10;                    )}&#10;                  &lt;/TableBody&gt;&#10;                &lt;/Table&gt;&#10;              &lt;/div&gt;&#10;            &lt;/CardContent&gt;&#10;          &lt;/Card&gt;&#10;        &lt;/TabsContent&gt;&#10;&#10;        {/* Payment Methods Tab */}&#10;        &lt;TabsContent value=&quot;payment&quot; className=&quot;space-y-6&quot;&gt;&#10;          &lt;Card&gt;&#10;            &lt;CardHeader className=&quot;flex flex-row items-center justify-between&quot;&gt;&#10;              &lt;CardTitle&gt;Payment Methods&lt;/CardTitle&gt;&#10;              &lt;Dialog open={showPaymentModal} onOpenChange={setShowPaymentModal}&gt;&#10;                &lt;DialogTrigger asChild&gt;&#10;                  &lt;Button onClick={resetPaymentForm}&gt;&#10;                    &lt;Plus className=&quot;h-4 w-4 mr-2&quot; /&gt;&#10;                    Add Payment Method&#10;                  &lt;/Button&gt;&#10;                &lt;/DialogTrigger&gt;&#10;                &lt;DialogContent&gt;&#10;                  &lt;DialogHeader&gt;&#10;                    &lt;DialogTitle&gt;Add Payment Method&lt;/DialogTitle&gt;&#10;                  &lt;/DialogHeader&gt;&#10;&#10;                  &lt;div className=&quot;space-y-4&quot;&gt;&#10;                    &lt;div className=&quot;space-y-2&quot;&gt;&#10;                      &lt;Label htmlFor=&quot;paymentName&quot;&gt;Name *&lt;/Label&gt;&#10;                      &lt;Input&#10;                        id=&quot;paymentName&quot;&#10;                        value={paymentForm.name}&#10;                        onChange={(e) =&gt; setPaymentForm(prev =&gt; ({...prev, name: e.target.value}))}&#10;                        placeholder=&quot;e.g., Visa, Mastercard, bKash&quot;&#10;                      /&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;div className=&quot;space-y-2&quot;&gt;&#10;                      &lt;Label&gt;Payment Method Image&lt;/Label&gt;&#10;                      &lt;div className=&quot;border-2 border-dashed border-gray-300 rounded-lg p-4&quot;&gt;&#10;                        &lt;input&#10;                          type=&quot;file&quot;&#10;                          accept=&quot;image/*&quot;&#10;                          onChange={async (e) =&gt; {&#10;                            const file = e.target.files?.[0]&#10;                            if (file) {&#10;                              try {&#10;                                const token = localStorage.getItem('adminToken')&#10;                                const formData = new FormData()&#10;                                formData.append('file', file)&#10;                                formData.append('folder', 'payment-methods')&#10;&#10;                                const response = await fetch('/api/admin/upload', {&#10;                                  method: 'POST',&#10;                                  headers: {&#10;                                    'Authorization': `Bearer ${token}`&#10;                                  },&#10;                                  body: formData&#10;                                })&#10;&#10;                                if (response.ok) {&#10;                                  const data = await response.json()&#10;                                  setPaymentForm(prev =&gt; ({ ...prev, image: data.url }))&#10;                                }&#10;                              } catch (error) {&#10;                                console.error('Error uploading image:', error)&#10;                              }&#10;                            }&#10;                          }}&#10;                          className=&quot;hidden&quot;&#10;                          id=&quot;payment-image-upload&quot;&#10;                        /&gt;&#10;                        &lt;label htmlFor=&quot;payment-image-upload&quot; className=&quot;cursor-pointer&quot;&gt;&#10;                          &lt;div className=&quot;text-center&quot;&gt;&#10;                            &lt;Upload className=&quot;h-8 w-8 mx-auto text-gray-400 mb-2&quot; /&gt;&#10;                            &lt;p className=&quot;text-gray-600&quot;&gt;Click to upload payment method logo&lt;/p&gt;&#10;                          &lt;/div&gt;&#10;                        &lt;/label&gt;&#10;&#10;                        {paymentForm.image &amp;&amp; (&#10;                          &lt;div className=&quot;mt-4 relative inline-block&quot;&gt;&#10;                            &lt;img&#10;                              src={paymentForm.image}&#10;                              alt=&quot;Payment Method&quot;&#10;                              className=&quot;w-20 h-12 object-contain rounded border&quot;&#10;                            /&gt;&#10;                            &lt;button&#10;                              type=&quot;button&quot;&#10;                              onClick={() =&gt; setPaymentForm(prev =&gt; ({...prev, image: ''}))}&#10;                              className=&quot;absolute -top-2 -right-2 bg-red-500 text-white rounded-full p-1&quot;&#10;                            &gt;&#10;                              &lt;X className=&quot;h-3 w-3&quot; /&gt;&#10;                            &lt;/button&gt;&#10;                          &lt;/div&gt;&#10;                        )}&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;div className=&quot;flex items-center space-x-2&quot;&gt;&#10;                      &lt;Switch&#10;                        id=&quot;paymentActive&quot;&#10;                        checked={paymentForm.isActive}&#10;                        onCheckedChange={(checked) =&gt; setPaymentForm(prev =&gt; ({...prev, isActive: checked}))}&#10;                      /&gt;&#10;                      &lt;Label htmlFor=&quot;paymentActive&quot;&gt;Active&lt;/Label&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;div className=&quot;flex justify-end gap-2 pt-4&quot;&gt;&#10;                      &lt;Button variant=&quot;outline&quot; onClick={() =&gt; setShowPaymentModal(false)}&gt;&#10;                        Cancel&#10;                      &lt;/Button&gt;&#10;                      &lt;Button&#10;                        onClick={async () =&gt; {&#10;                          try {&#10;                            const token = localStorage.getItem('adminToken')&#10;                            const response = await fetch('/api/admin/footer', {&#10;                              method: 'POST',&#10;                              headers: {&#10;                                'Content-Type': 'application/json',&#10;                                'Authorization': `Bearer ${token}`&#10;                              },&#10;                              body: JSON.stringify({ type: 'payment', data: paymentForm })&#10;                            })&#10;                            if (response.ok) {&#10;                              setShowPaymentModal(false)&#10;                              resetPaymentForm()&#10;                              fetchFooterData()&#10;                            }&#10;                          } catch (error) {&#10;                            console.error('Error creating payment method:', error)&#10;                          }&#10;                        }}&#10;                        disabled={!paymentForm.name}&#10;                      &gt;&#10;                        Add Payment Method&#10;                      &lt;/Button&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/DialogContent&gt;&#10;              &lt;/Dialog&gt;&#10;            &lt;/CardHeader&gt;&#10;            &lt;CardContent&gt;&#10;              &lt;div className=&quot;overflow-x-auto&quot;&gt;&#10;                &lt;Table&gt;&#10;                  &lt;TableHeader&gt;&#10;                    &lt;TableRow&gt;&#10;                      &lt;TableHead&gt;Payment Method&lt;/TableHead&gt;&#10;                      &lt;TableHead&gt;Logo&lt;/TableHead&gt;&#10;                      &lt;TableHead&gt;Status&lt;/TableHead&gt;&#10;                      &lt;TableHead&gt;Actions&lt;/TableHead&gt;&#10;                    &lt;/TableRow&gt;&#10;                  &lt;/TableHeader&gt;&#10;                  &lt;TableBody&gt;&#10;                    {footerData.paymentMethods.map((method: any) =&gt; (&#10;                      &lt;TableRow key={method.id}&gt;&#10;                        &lt;TableCell className=&quot;font-medium&quot;&gt;{method.name}&lt;/TableCell&gt;&#10;                        &lt;TableCell&gt;&#10;                          {method.image ? (&#10;                            &lt;img&#10;                              src={method.image}&#10;                              alt={method.name}&#10;                              className=&quot;w-12 h-8 object-contain&quot;&#10;                            /&gt;&#10;                          ) : (&#10;                            &lt;div className=&quot;w-12 h-8 bg-gray-100 rounded flex items-center justify-center text-xs&quot;&gt;&#10;                              {method.name.substring(0, 2).toUpperCase()}&#10;                            &lt;/div&gt;&#10;                          )}&#10;                        &lt;/TableCell&gt;&#10;                        &lt;TableCell&gt;&#10;                          &lt;Badge variant={method.isActive ? &quot;default&quot; : &quot;secondary&quot;}&gt;&#10;                            {method.isActive ? 'Active' : 'Inactive'}&#10;                          &lt;/Badge&gt;&#10;                        &lt;/TableCell&gt;&#10;                        &lt;TableCell&gt;&#10;                          &lt;div className=&quot;flex gap-2&quot;&gt;&#10;                            &lt;Button size=&quot;sm&quot; variant=&quot;outline&quot;&gt;&#10;                              &lt;Edit className=&quot;h-4 w-4&quot; /&gt;&#10;                            &lt;/Button&gt;&#10;                            &lt;Button&#10;                              size=&quot;sm&quot;&#10;                              variant=&quot;outline&quot;&#10;                              onClick={() =&gt; handleDeleteItem(method.id, 'payment')}&#10;                            &gt;&#10;                              &lt;Trash2 className=&quot;h-4 w-4&quot; /&gt;&#10;                            &lt;/Button&gt;&#10;                          &lt;/div&gt;&#10;                        &lt;/TableCell&gt;&#10;                      &lt;/TableRow&gt;&#10;                    ))}&#10;                    {footerData.paymentMethods.length === 0 &amp;&amp; (&#10;                      &lt;TableRow&gt;&#10;                        &lt;TableCell colSpan={4} className=&quot;text-center py-8&quot;&gt;&#10;                          &lt;div className=&quot;flex flex-col items-center gap-2&quot;&gt;&#10;                            &lt;CreditCard className=&quot;h-12 w-12 text-gray-400&quot; /&gt;&#10;                            &lt;p className=&quot;text-gray-500&quot;&gt;No payment methods found&lt;/p&gt;&#10;                            &lt;Button size=&quot;sm&quot; onClick={() =&gt; setShowPaymentModal(true)}&gt;&#10;                              Add your first payment method&#10;                            &lt;/Button&gt;&#10;                          &lt;/div&gt;&#10;                        &lt;/TableCell&gt;&#10;                      &lt;/TableRow&gt;&#10;                    )}&#10;                  &lt;/TableBody&gt;&#10;                &lt;/Table&gt;&#10;              &lt;/div&gt;&#10;            &lt;/CardContent&gt;&#10;          &lt;/Card&gt;&#10;        &lt;/TabsContent&gt;&#10;      &lt;/Tabs&gt;&#10;    &lt;/div&gt;&#10;  )&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/admin/pages/page.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/admin/pages/page.tsx" />
              <option name="updatedContent" value="&quot;use client&quot;&#10;&#10;import { useState, useEffect } from 'react'&#10;import { Button } from '@/components/ui/button'&#10;import { Input } from '@/components/ui/input'&#10;import { Label } from '@/components/ui/label'&#10;import { Textarea } from '@/components/ui/textarea'&#10;import { Switch } from '@/components/ui/switch'&#10;import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'&#10;import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table'&#10;import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog'&#10;import { Edit, Trash2, Plus } from 'lucide-react'&#10;import { toast } from 'sonner'&#10;&#10;interface Page {&#10;  id: string&#10;  title: string&#10;  slug: string&#10;  content: string&#10;  metaTitle?: string&#10;  metaDescription?: string&#10;  isPublished: boolean&#10;  createdAt: string&#10;  updatedAt: string&#10;}&#10;&#10;export default function PagesManagement() {&#10;  const [pages, setPages] = useState&lt;Page[]&gt;([])&#10;  const [loading, setLoading] = useState(true)&#10;  const [editingPage, setEditingPage] = useState&lt;Page | null&gt;(null)&#10;  const [isDialogOpen, setIsDialogOpen] = useState(false)&#10;  const [formData, setFormData] = useState({&#10;    title: '',&#10;    slug: '',&#10;    content: '',&#10;    metaTitle: '',&#10;    metaDescription: '',&#10;    isPublished: true&#10;  })&#10;&#10;  useEffect(() =&gt; {&#10;    fetchPages()&#10;  }, [])&#10;&#10;  const fetchPages = async () =&gt; {&#10;    try {&#10;      const response = await fetch('/api/admin/pages')&#10;      if (response.ok) {&#10;        const data = await response.json()&#10;        setPages(data)&#10;      }&#10;    } catch (error) {&#10;      console.error('Error fetching pages:', error)&#10;      toast.error('Failed to fetch pages')&#10;    } finally {&#10;      setLoading(false)&#10;    }&#10;  }&#10;&#10;  const handleSubmit = async (e: React.FormEvent) =&gt; {&#10;    e.preventDefault()&#10;    &#10;    try {&#10;      const url = editingPage ? `/api/pages/${editingPage.slug}` : '/api/pages'&#10;      const method = editingPage ? 'PUT' : 'POST'&#10;      &#10;      const response = await fetch(url, {&#10;        method,&#10;        headers: { 'Content-Type': 'application/json' },&#10;        body: JSON.stringify(formData)&#10;      })&#10;&#10;      if (response.ok) {&#10;        toast.success(editingPage ? 'Page updated successfully' : 'Page created successfully')&#10;        setIsDialogOpen(false)&#10;        resetForm()&#10;        fetchPages()&#10;      } else {&#10;        const error = await response.json()&#10;        toast.error(error.error || 'Failed to save page')&#10;      }&#10;    } catch (error) {&#10;      console.error('Error saving page:', error)&#10;      toast.error('Failed to save page')&#10;    }&#10;  }&#10;&#10;  const handleEdit = (page: Page) =&gt; {&#10;    setEditingPage(page)&#10;    setFormData({&#10;      title: page.title,&#10;      slug: page.slug,&#10;      content: page.content,&#10;      metaTitle: page.metaTitle || '',&#10;      metaDescription: page.metaDescription || '',&#10;      isPublished: page.isPublished&#10;    })&#10;    setIsDialogOpen(true)&#10;  }&#10;&#10;  const handleDelete = async (slug: string) =&gt; {&#10;    if (!confirm('Are you sure you want to delete this page?')) return&#10;&#10;    try {&#10;      const response = await fetch(`/api/pages/${slug}`, {&#10;        method: 'DELETE'&#10;      })&#10;&#10;      if (response.ok) {&#10;        toast.success('Page deleted successfully')&#10;        fetchPages()&#10;      } else {&#10;        toast.error('Failed to delete page')&#10;      }&#10;    } catch (error) {&#10;      console.error('Error deleting page:', error)&#10;      toast.error('Failed to delete page')&#10;    }&#10;  }&#10;&#10;  const resetForm = () =&gt; {&#10;    setFormData({&#10;      title: '',&#10;      slug: '',&#10;      content: '',&#10;      metaTitle: '',&#10;      metaDescription: '',&#10;      isPublished: true&#10;    })&#10;    setEditingPage(null)&#10;  }&#10;&#10;  const generateSlug = (title: string) =&gt; {&#10;    return title&#10;      .toLowerCase()&#10;      .replace(/[^a-z0-9 -]/g, '')&#10;      .replace(/\s+/g, '-')&#10;      .replace(/-+/g, '-')&#10;      .trim()&#10;  }&#10;&#10;  const handleTitleChange = (title: string) =&gt; {&#10;    setFormData(prev =&gt; ({&#10;      ...prev,&#10;      title,&#10;      slug: !editingPage ? generateSlug(title) : prev.slug&#10;    }))&#10;  }&#10;&#10;  if (loading) {&#10;    return &lt;div className=&quot;p-6&quot;&gt;Loading pages...&lt;/div&gt;&#10;  }&#10;&#10;  return (&#10;    &lt;div className=&quot;p-6&quot;&gt;&#10;      &lt;div className=&quot;flex justify-between items-center mb-6&quot;&gt;&#10;        &lt;h1 className=&quot;text-2xl font-bold&quot;&gt;Pages Management&lt;/h1&gt;&#10;        &lt;Dialog open={isDialogOpen} onOpenChange={setIsDialogOpen}&gt;&#10;          &lt;DialogTrigger asChild&gt;&#10;            &lt;Button onClick={resetForm}&gt;&#10;              &lt;Plus className=&quot;w-4 h-4 mr-2&quot; /&gt;&#10;              Add New Page&#10;            &lt;/Button&gt;&#10;          &lt;/DialogTrigger&gt;&#10;          &lt;DialogContent className=&quot;max-w-2xl max-h-[90vh] overflow-y-auto&quot;&gt;&#10;            &lt;DialogHeader&gt;&#10;              &lt;DialogTitle&gt;&#10;                {editingPage ? 'Edit Page' : 'Create New Page'}&#10;              &lt;/DialogTitle&gt;&#10;            &lt;/DialogHeader&gt;&#10;            &lt;form onSubmit={handleSubmit} className=&quot;space-y-4&quot;&gt;&#10;              &lt;div&gt;&#10;                &lt;Label htmlFor=&quot;title&quot;&gt;Title&lt;/Label&gt;&#10;                &lt;Input&#10;                  id=&quot;title&quot;&#10;                  value={formData.title}&#10;                  onChange={(e) =&gt; handleTitleChange(e.target.value)}&#10;                  required&#10;                /&gt;&#10;              &lt;/div&gt;&#10;              &lt;div&gt;&#10;                &lt;Label htmlFor=&quot;slug&quot;&gt;Slug&lt;/Label&gt;&#10;                &lt;Input&#10;                  id=&quot;slug&quot;&#10;                  value={formData.slug}&#10;                  onChange={(e) =&gt; setFormData(prev =&gt; ({ ...prev, slug: e.target.value }))}&#10;                  required&#10;                  disabled={!!editingPage}&#10;                /&gt;&#10;              &lt;/div&gt;&#10;              &lt;div&gt;&#10;                &lt;Label htmlFor=&quot;content&quot;&gt;Content (HTML)&lt;/Label&gt;&#10;                &lt;Textarea&#10;                  id=&quot;content&quot;&#10;                  value={formData.content}&#10;                  onChange={(e) =&gt; setFormData(prev =&gt; ({ ...prev, content: e.target.value }))}&#10;                  rows={10}&#10;                  required&#10;                /&gt;&#10;              &lt;/div&gt;&#10;              &lt;div&gt;&#10;                &lt;Label htmlFor=&quot;metaTitle&quot;&gt;Meta Title&lt;/Label&gt;&#10;                &lt;Input&#10;                  id=&quot;metaTitle&quot;&#10;                  value={formData.metaTitle}&#10;                  onChange={(e) =&gt; setFormData(prev =&gt; ({ ...prev, metaTitle: e.target.value }))}&#10;                /&gt;&#10;              &lt;/div&gt;&#10;              &lt;div&gt;&#10;                &lt;Label htmlFor=&quot;metaDescription&quot;&gt;Meta Description&lt;/Label&gt;&#10;                &lt;Textarea&#10;                  id=&quot;metaDescription&quot;&#10;                  value={formData.metaDescription}&#10;                  onChange={(e) =&gt; setFormData(prev =&gt; ({ ...prev, metaDescription: e.target.value }))}&#10;                  rows={3}&#10;                /&gt;&#10;              &lt;/div&gt;&#10;              &lt;div className=&quot;flex items-center space-x-2&quot;&gt;&#10;                &lt;Switch&#10;                  id=&quot;isPublished&quot;&#10;                  checked={formData.isPublished}&#10;                  onCheckedChange={(checked) =&gt; setFormData(prev =&gt; ({ ...prev, isPublished: checked }))}&#10;                /&gt;&#10;                &lt;Label htmlFor=&quot;isPublished&quot;&gt;Published&lt;/Label&gt;&#10;              &lt;/div&gt;&#10;              &lt;Button type=&quot;submit&quot; className=&quot;w-full&quot;&gt;&#10;                {editingPage ? 'Update Page' : 'Create Page'}&#10;              &lt;/Button&gt;&#10;            &lt;/form&gt;&#10;          &lt;/DialogContent&gt;&#10;        &lt;/Dialog&gt;&#10;      &lt;/div&gt;&#10;&#10;      &lt;Card&gt;&#10;        &lt;CardHeader&gt;&#10;          &lt;CardTitle&gt;All Pages&lt;/CardTitle&gt;&#10;        &lt;/CardHeader&gt;&#10;        &lt;CardContent&gt;&#10;          &lt;Table&gt;&#10;            &lt;TableHeader&gt;&#10;              &lt;TableRow&gt;&#10;                &lt;TableHead&gt;Title&lt;/TableHead&gt;&#10;                &lt;TableHead&gt;Slug&lt;/TableHead&gt;&#10;                &lt;TableHead&gt;Status&lt;/TableHead&gt;&#10;                &lt;TableHead&gt;Updated&lt;/TableHead&gt;&#10;                &lt;TableHead&gt;Actions&lt;/TableHead&gt;&#10;              &lt;/TableRow&gt;&#10;            &lt;/TableHeader&gt;&#10;            &lt;TableBody&gt;&#10;              {pages.map((page) =&gt; (&#10;                &lt;TableRow key={page.id}&gt;&#10;                  &lt;TableCell className=&quot;font-medium&quot;&gt;{page.title}&lt;/TableCell&gt;&#10;                  &lt;TableCell&gt;/{page.slug}&lt;/TableCell&gt;&#10;                  &lt;TableCell&gt;&#10;                    &lt;span className={`px-2 py-1 rounded-full text-xs ${&#10;                      page.isPublished &#10;                        ? 'bg-green-100 text-green-800' &#10;                        : 'bg-gray-100 text-gray-800'&#10;                    }`}&gt;&#10;                      {page.isPublished ? 'Published' : 'Draft'}&#10;                    &lt;/span&gt;&#10;                  &lt;/TableCell&gt;&#10;                  &lt;TableCell&gt;&#10;                    {new Date(page.updatedAt).toLocaleDateString()}&#10;                  &lt;/TableCell&gt;&#10;                  &lt;TableCell&gt;&#10;                    &lt;div className=&quot;flex space-x-2&quot;&gt;&#10;                      &lt;Button&#10;                        variant=&quot;outline&quot;&#10;                        size=&quot;sm&quot;&#10;                        onClick={() =&gt; handleEdit(page)}&#10;                      &gt;&#10;                        &lt;Edit className=&quot;w-4 h-4&quot; /&gt;&#10;                      &lt;/Button&gt;&#10;                      &lt;Button&#10;                        variant=&quot;outline&quot;&#10;                        size=&quot;sm&quot;&#10;                        onClick={() =&gt; handleDelete(page.slug)}&#10;                      &gt;&#10;                        &lt;Trash2 className=&quot;w-4 h-4&quot; /&gt;&#10;                      &lt;/Button&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/TableCell&gt;&#10;                &lt;/TableRow&gt;&#10;              ))}&#10;            &lt;/TableBody&gt;&#10;          &lt;/Table&gt;&#10;        &lt;/CardContent&gt;&#10;      &lt;/Card&gt;&#10;    &lt;/div&gt;&#10;  )&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/api/admin/footer/[id]/route.ts">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/api/admin/footer/[id]/route.ts" />
              <option name="updatedContent" value="import { NextRequest, NextResponse } from 'next/server'&#10;import { prisma } from '@/lib/prisma'&#10;import { verifyToken, getTokenFromRequest } from '@/lib/auth'&#10;&#10;async function verifyAdmin(request: NextRequest) {&#10;  const token = getTokenFromRequest(request)&#10;  if (!token) {&#10;    return { error: 'No authentication token provided', status: 401 }&#10;  }&#10;&#10;  const decoded = verifyToken(token) as any&#10;  if (!decoded) {&#10;    return { error: 'Invalid or expired token', status: 401 }&#10;  }&#10;&#10;  const user = await prisma.user.findUnique({&#10;    where: { id: decoded.userId }&#10;  })&#10;&#10;  if (!user) {&#10;    return { error: 'User not found', status: 401 }&#10;  }&#10;&#10;  if (user.role !== 'ADMIN' &amp;&amp; user.role !== 'SUPER_ADMIN') {&#10;    return { error: 'Insufficient privileges - Admin access required', status: 403 }&#10;  }&#10;&#10;  return { user }&#10;}&#10;&#10;// PUT /api/admin/footer/[id] - Update footer content (ADMIN ONLY)&#10;export async function PUT(&#10;  request: NextRequest,&#10;  { params }: { params: { id: string } }&#10;) {&#10;  try {&#10;    const authResult = await verifyAdmin(request)&#10;    if (authResult.error) {&#10;      return NextResponse.json({ error: authResult.error }, { status: authResult.status })&#10;    }&#10;&#10;    const { type, data } = await request.json()&#10;&#10;    // Validate input&#10;    if (!type || !data) {&#10;      return NextResponse.json({ error: 'Missing required fields: type and data' }, { status: 400 })&#10;    }&#10;&#10;    if (!params.id) {&#10;      return NextResponse.json({ error: 'Missing item ID' }, { status: 400 })&#10;    }&#10;&#10;    let result&#10;    switch (type) {&#10;      case 'content':&#10;        // Validate required fields for content&#10;        if (!data.title || !data.content) {&#10;          return NextResponse.json({ error: 'Missing required fields: title, content' }, { status: 400 })&#10;        }&#10;        &#10;        result = await prisma.footerContent.update({&#10;          where: { id: params.id },&#10;          data: {&#10;            title: data.title,&#10;            content: data.content,&#10;            section: data.section,&#10;            isActive: data.isActive&#10;          }&#10;        })&#10;        break&#10;        &#10;      case 'social':&#10;        // Validate required fields for social links&#10;        if (!data.platform || !data.url) {&#10;          return NextResponse.json({ error: 'Missing required fields: platform, url' }, { status: 400 })&#10;        }&#10;        &#10;        result = await prisma.socialLink.update({&#10;          where: { id: params.id },&#10;          data: {&#10;            platform: data.platform,&#10;            url: data.url,&#10;            icon: data.icon,&#10;            isActive: data.isActive&#10;          }&#10;        })&#10;        break&#10;        &#10;      case 'payment':&#10;        // Validate required fields for payment methods&#10;        if (!data.name) {&#10;          return NextResponse.json({ error: 'Missing required field: name' }, { status: 400 })&#10;        }&#10;        &#10;        result = await prisma.paymentMethod.update({&#10;          where: { id: params.id },&#10;          data: {&#10;            name: data.name,&#10;            image: data.image,&#10;            isActive: data.isActive&#10;          }&#10;        })&#10;        break&#10;        &#10;      default:&#10;        return NextResponse.json({ error: 'Invalid type. Must be: content, social, or payment' }, { status: 400 })&#10;    }&#10;&#10;    return NextResponse.json(result)&#10;  } catch (error) {&#10;    console.error('Error updating footer content:', error)&#10;    if (error.code === 'P2025') {&#10;      return NextResponse.json({ error: 'Item not found' }, { status: 404 })&#10;    }&#10;    return NextResponse.json({ error: 'Internal server error' }, { status: 500 })&#10;  }&#10;}&#10;&#10;// DELETE /api/admin/footer/[id] - Delete footer content (ADMIN ONLY)&#10;export async function DELETE(&#10;  request: NextRequest,&#10;  { params }: { params: { id: string } }&#10;) {&#10;  try {&#10;    const authResult = await verifyAdmin(request)&#10;    if (authResult.error) {&#10;      return NextResponse.json({ error: authResult.error }, { status: authResult.status })&#10;    }&#10;&#10;    const { type } = await request.json()&#10;&#10;    // Validate input&#10;    if (!type) {&#10;      return NextResponse.json({ error: 'Missing required field: type' }, { status: 400 })&#10;    }&#10;&#10;    if (!params.id) {&#10;      return NextResponse.json({ error: 'Missing item ID' }, { status: 400 })&#10;    }&#10;&#10;    switch (type) {&#10;      case 'content':&#10;        await prisma.footerContent.delete({&#10;          where: { id: params.id }&#10;        })&#10;        break&#10;        &#10;      case 'social':&#10;        await prisma.socialLink.delete({&#10;          where: { id: params.id }&#10;        })&#10;        break&#10;        &#10;      case 'payment':&#10;        await prisma.paymentMethod.delete({&#10;          where: { id: params.id }&#10;        })&#10;        break&#10;        &#10;      default:&#10;        return NextResponse.json({ error: 'Invalid type. Must be: content, social, or payment' }, { status: 400 })&#10;    }&#10;&#10;    return NextResponse.json({ success: true })&#10;  } catch (error) {&#10;    console.error('Error deleting footer content:', error)&#10;    if (error.code === 'P2025') {&#10;      return NextResponse.json({ error: 'Item not found' }, { status: 404 })&#10;    }&#10;    return NextResponse.json({ error: 'Internal server error' }, { status: 500 })&#10;  }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/api/admin/footer/route.ts">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/api/admin/footer/route.ts" />
              <option name="updatedContent" value="import { NextRequest, NextResponse } from 'next/server'&#10;import { prisma } from '@/lib/prisma'&#10;import { verifyToken, getTokenFromRequest } from '@/lib/auth'&#10;&#10;async function verifyAdmin(request: NextRequest) {&#10;  const token = getTokenFromRequest(request)&#10;  if (!token) {&#10;    return { error: 'No authentication token provided', status: 401 }&#10;  }&#10;&#10;  const decoded = verifyToken(token) as any&#10;  if (!decoded) {&#10;    return { error: 'Invalid or expired token', status: 401 }&#10;  }&#10;&#10;  const user = await prisma.user.findUnique({&#10;    where: { id: decoded.userId }&#10;  })&#10;&#10;  if (!user) {&#10;    return { error: 'User not found', status: 401 }&#10;  }&#10;&#10;  if (user.role !== 'ADMIN' &amp;&amp; user.role !== 'SUPER_ADMIN') {&#10;    return { error: 'Insufficient privileges - Admin access required', status: 403 }&#10;  }&#10;&#10;  return { user }&#10;}&#10;&#10;// GET /api/admin/footer - Get all footer content (ADMIN ONLY)&#10;export async function GET(request: NextRequest) {&#10;  try {&#10;    const authResult = await verifyAdmin(request)&#10;    if (authResult.error) {&#10;      return NextResponse.json({ error: authResult.error }, { status: authResult.status })&#10;    }&#10;&#10;    const [footerContent, socialLinks, paymentMethods] = await Promise.all([&#10;      prisma.footerContent.findMany({&#10;        orderBy: { section: 'asc' }&#10;      }),&#10;      prisma.socialLink.findMany(),&#10;      prisma.paymentMethod.findMany()&#10;    ])&#10;&#10;    return NextResponse.json({&#10;      content: footerContent,&#10;      socialLinks,&#10;      paymentMethods&#10;    })&#10;  } catch (error) {&#10;    console.error('Error fetching footer data:', error)&#10;    return NextResponse.json({ error: 'Internal server error' }, { status: 500 })&#10;  }&#10;}&#10;&#10;// POST /api/admin/footer - Create footer content (ADMIN ONLY)&#10;export async function POST(request: NextRequest) {&#10;  try {&#10;    const authResult = await verifyAdmin(request)&#10;    if (authResult.error) {&#10;      return NextResponse.json({ error: authResult.error }, { status: authResult.status })&#10;    }&#10;&#10;    const { type, data } = await request.json()&#10;&#10;    // Validate input&#10;    if (!type || !data) {&#10;      return NextResponse.json({ error: 'Missing required fields: type and data' }, { status: 400 })&#10;    }&#10;&#10;    let result&#10;    switch (type) {&#10;      case 'content':&#10;        // Validate required fields for content&#10;        if (!data.slug || !data.title || !data.content) {&#10;          return NextResponse.json({ error: 'Missing required fields: slug, title, content' }, { status: 400 })&#10;        }&#10;        &#10;        // Check for duplicate slug&#10;        const existingContent = await prisma.footerContent.findUnique({&#10;          where: { slug: data.slug }&#10;        })&#10;        if (existingContent) {&#10;          return NextResponse.json({ error: 'Content with this slug already exists' }, { status: 409 })&#10;        }&#10;        &#10;        result = await prisma.footerContent.create({&#10;          data: {&#10;            slug: data.slug,&#10;            title: data.title,&#10;            content: data.content,&#10;            section: data.section || 'other',&#10;            isActive: data.isActive ?? true&#10;          }&#10;        })&#10;        break&#10;        &#10;      case 'social':&#10;        // Validate required fields for social links&#10;        if (!data.platform || !data.url) {&#10;          return NextResponse.json({ error: 'Missing required fields: platform, url' }, { status: 400 })&#10;        }&#10;        &#10;        result = await prisma.socialLink.create({&#10;          data: {&#10;            platform: data.platform,&#10;            url: data.url,&#10;            icon: data.icon,&#10;            isActive: data.isActive ?? true&#10;          }&#10;        })&#10;        break&#10;        &#10;      case 'payment':&#10;        // Validate required fields for payment methods&#10;        if (!data.name) {&#10;          return NextResponse.json({ error: 'Missing required field: name' }, { status: 400 })&#10;        }&#10;        &#10;        result = await prisma.paymentMethod.create({&#10;          data: {&#10;            name: data.name,&#10;            image: data.image,&#10;            isActive: data.isActive ?? true&#10;          }&#10;        })&#10;        break&#10;        &#10;      default:&#10;        return NextResponse.json({ error: 'Invalid type. Must be: content, social, or payment' }, { status: 400 })&#10;    }&#10;&#10;    return NextResponse.json(result, { status: 201 })&#10;  } catch (error) {&#10;    console.error('Error creating footer content:', error)&#10;    return NextResponse.json({ error: 'Internal server error' }, { status: 500 })&#10;  }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/api/admin/pages/route.ts">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/api/admin/pages/route.ts" />
              <option name="updatedContent" value="import { NextRequest, NextResponse } from 'next/server'&#10;import { prisma } from '@/lib/prisma'&#10;&#10;export async function GET() {&#10;  try {&#10;    const pages = await prisma.page.findMany({&#10;      orderBy: { title: 'asc' }&#10;    })&#10;    return NextResponse.json(pages)&#10;  } catch (error) {&#10;    console.error('Error fetching admin pages:', error)&#10;    return NextResponse.json({ error: 'Failed to fetch pages' }, { status: 500 })&#10;  }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/api/footer/route.ts">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/api/footer/route.ts" />
              <option name="originalContent" value="import { NextRequest, NextResponse } from 'next/server'&#10;import { prisma } from '@/lib/prisma'&#10;&#10;// GET /api/footer - Get all footer content&#10;export async function GET() {&#10;  try {&#10;    const [footerContent, socialLinks, paymentMethods] = await Promise.all([&#10;      prisma.footerContent.findMany({&#10;        where: { isActive: true },&#10;        orderBy: { section: 'asc' }&#10;      }),&#10;      prisma.socialLink.findMany({&#10;        where: { isActive: true }&#10;      }),&#10;      prisma.paymentMethod.findMany({&#10;        where: { isActive: true }&#10;      })&#10;    ])&#10;&#10;    return NextResponse.json({&#10;      content: footerContent,&#10;      socialLinks,&#10;      paymentMethods&#10;    })&#10;  } catch (error) {&#10;    console.error('Error fetching footer content:', error)&#10;    return NextResponse.json({ error: 'Internal server error' }, { status: 500 })&#10;  }&#10;}&#10;" />
              <option name="updatedContent" value="import { NextRequest, NextResponse } from 'next/server'&#10;import { prisma } from '@/lib/prisma'&#10;&#10;// GET /api/footer - Public API for frontend (READ-ONLY)&#10;export async function GET(request: NextRequest) {&#10;  try {&#10;    const [footerContent, socialLinks, paymentMethods] = await Promise.all([&#10;      prisma.footerContent.findMany({&#10;        where: { isActive: true },&#10;        select: {&#10;          id: true,&#10;          slug: true,&#10;          title: true,&#10;          content: true,&#10;          section: true,&#10;          isActive: true&#10;        },&#10;        orderBy: { section: 'asc' }&#10;      }),&#10;      prisma.socialLink.findMany({&#10;        where: { isActive: true },&#10;        select: {&#10;          id: true,&#10;          platform: true,&#10;          url: true,&#10;          icon: true,&#10;          isActive: true&#10;        }&#10;      }),&#10;      prisma.paymentMethod.findMany({&#10;        where: { isActive: true },&#10;        select: {&#10;          id: true,&#10;          name: true,&#10;          image: true,&#10;          isActive: true&#10;        }&#10;      })&#10;    ])&#10;&#10;    return NextResponse.json({&#10;      content: footerContent,&#10;      socialLinks,&#10;      paymentMethods&#10;    })&#10;  } catch (error) {&#10;    console.error('Error fetching footer content:', error)&#10;    return NextResponse.json({ error: 'Internal server error' }, { status: 500 })&#10;  }&#10;}&#10;&#10;// Block all modification attempts on public API&#10;export async function POST() {&#10;  return NextResponse.json({ error: 'Unauthorized - Content can only be managed through admin panel' }, { status: 403 })&#10;}&#10;&#10;export async function PUT() {&#10;  return NextResponse.json({ error: 'Unauthorized - Content can only be managed through admin panel' }, { status: 403 })&#10;}&#10;&#10;export async function DELETE() {&#10;  return NextResponse.json({ error: 'Unauthorized - Content can only be managed through admin panel' }, { status: 403 })&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/api/pages/route.ts">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/api/pages/route.ts" />
              <option name="updatedContent" value="import { NextRequest, NextResponse } from 'next/server'&#10;import { prisma } from '@/lib/prisma'&#10;&#10;export async function GET() {&#10;  try {&#10;    const pages = await prisma.page.findMany({&#10;      where: { isPublished: true },&#10;      orderBy: { title: 'asc' }&#10;    })&#10;    return NextResponse.json(pages)&#10;  } catch (error) {&#10;    console.error('Error fetching pages:', error)&#10;    return NextResponse.json({ error: 'Failed to fetch pages' }, { status: 500 })&#10;  }&#10;}&#10;&#10;export async function POST(request: NextRequest) {&#10;  try {&#10;    const data = await request.json()&#10;    const { title, slug, content, metaTitle, metaDescription, isPublished } = data&#10;&#10;    // Check if slug already exists&#10;    const existingPage = await prisma.page.findUnique({&#10;      where: { slug }&#10;    })&#10;&#10;    if (existingPage) {&#10;      return NextResponse.json({ error: 'Page with this slug already exists' }, { status: 400 })&#10;    }&#10;&#10;    const page = await prisma.page.create({&#10;      data: {&#10;        title,&#10;        slug,&#10;        content,&#10;        metaTitle,&#10;        metaDescription,&#10;        isPublished: isPublished ?? true&#10;      }&#10;    })&#10;&#10;    return NextResponse.json(page, { status: 201 })&#10;  } catch (error) {&#10;    console.error('Error creating page:', error)&#10;    return NextResponse.json({ error: 'Failed to create page' }, { status: 500 })&#10;  }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/contact/page.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/contact/page.tsx" />
              <option name="updatedContent" value="import FooterPageTemplate from '@/components/FooterPageTemplate'&#10;&#10;export default function ContactPage() {&#10;  const fallbackContent = `&#10;    &lt;h2&gt;Get in Touch&lt;/h2&gt;&#10;    &lt;p&gt;We'd love to hear from you. Contact us for any questions about our products or services.&lt;/p&gt;&#10;    &#10;    &lt;h3&gt;Contact Information&lt;/h3&gt;&#10;    &lt;p&gt;&lt;strong&gt;Email:&lt;/strong&gt; info@sfdbd.com&lt;/p&gt;&#10;    &lt;p&gt;&lt;strong&gt;Phone:&lt;/strong&gt; +880 1234 567890&lt;/p&gt;&#10;    &lt;p&gt;&lt;strong&gt;Address:&lt;/strong&gt; 123 Fashion Street, Dhaka, Bangladesh&lt;/p&gt;&#10;    &#10;    &lt;h3&gt;Business Hours&lt;/h3&gt;&#10;    &lt;p&gt;Monday - Friday: 9:00 AM - 6:00 PM&lt;/p&gt;&#10;    &lt;p&gt;Saturday: 10:00 AM - 4:00 PM&lt;/p&gt;&#10;    &lt;p&gt;Sunday: Closed&lt;/p&gt;&#10;    &#10;    &lt;h3&gt;Customer Service&lt;/h3&gt;&#10;    &lt;p&gt;For immediate assistance, please contact our customer service team during business hours. We're here to help with any questions about our products, orders, shipping, or returns.&lt;/p&gt;&#10;  `&#10;&#10;  return (&#10;    &lt;FooterPageTemplate &#10;      slug=&quot;contact&quot;&#10;      fallbackTitle=&quot;Contact Us&quot;&#10;      fallbackContent={fallbackContent}&#10;    /&gt;&#10;  )&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/delivery/page.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/delivery/page.tsx" />
              <option name="updatedContent" value="import FooterPageTemplate from '@/components/FooterPageTemplate'&#10;&#10;export default function DeliveryPage() {&#10;  const fallbackContent = `&#10;    &lt;h2&gt;Delivery &amp; Shipping&lt;/h2&gt;&#10;    &lt;p&gt;We offer reliable delivery services across Bangladesh to get your products to you safely and on time.&lt;/p&gt;&#10;    &#10;    &lt;h3&gt;Delivery Areas&lt;/h3&gt;&#10;    &lt;ul&gt;&#10;      &lt;li&gt;Dhaka City: 1-2 business days&lt;/li&gt;&#10;      &lt;li&gt;Major Cities: 2-3 business days&lt;/li&gt;&#10;      &lt;li&gt;Other Areas: 3-5 business days&lt;/li&gt;&#10;    &lt;/ul&gt;&#10;    &#10;    &lt;h3&gt;Delivery Charges&lt;/h3&gt;&#10;    &lt;ul&gt;&#10;      &lt;li&gt;Inside Dhaka: 80 BDT&lt;/li&gt;&#10;      &lt;li&gt;Outside Dhaka: 120 BDT&lt;/li&gt;&#10;      &lt;li&gt;Free delivery on orders above 2000 BDT&lt;/li&gt;&#10;    &lt;/ul&gt;&#10;    &#10;    &lt;h3&gt;Delivery Process&lt;/h3&gt;&#10;    &lt;p&gt;Once your order is confirmed, we'll process it within 24 hours and arrange delivery through our trusted courier partners.&lt;/p&gt;&#10;  `&#10;&#10;  return (&#10;    &lt;FooterPageTemplate &#10;      slug=&quot;delivery&quot;&#10;      fallbackTitle=&quot;Delivery Information&quot;&#10;      fallbackContent={fallbackContent}&#10;    /&gt;&#10;  )&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/ethics/page.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/ethics/page.tsx" />
              <option name="originalContent" value="'use client'&#10;&#10;import { useState, useEffect } from 'react'&#10;import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'&#10;&#10;export default function EthicsPage() {&#10;  const [content, setContent] = useState&lt;any&gt;(null)&#10;  const [loading, setLoading] = useState(true)&#10;&#10;  useEffect(() =&gt; {&#10;    fetchContent()&#10;  }, [])&#10;&#10;  const fetchContent = async () =&gt; {&#10;    try {&#10;      const response = await fetch('/api/footer')&#10;      if (response.ok) {&#10;        const data = await response.json()&#10;        const ethicsContent = data.content.find((item: any) =&gt; item.slug === 'ethics')&#10;        setContent(ethicsContent)&#10;      }&#10;    } catch (error) {&#10;      console.error('Error fetching content:', error)&#10;    } finally {&#10;      setLoading(false)&#10;    }&#10;  }&#10;&#10;  if (loading) {&#10;    return (&#10;      &lt;div className=&quot;min-h-screen bg-gray-50 flex items-center justify-center&quot;&gt;&#10;        &lt;div className=&quot;animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600&quot;&gt;&lt;/div&gt;&#10;      &lt;/div&gt;&#10;    )&#10;  }&#10;&#10;  return (&#10;    &lt;div className=&quot;min-h-screen bg-gray-50&quot;&gt;&#10;      &lt;div className=&quot;container mx-auto px-4 py-12&quot;&gt;&#10;        &lt;Card className=&quot;max-w-4xl mx-auto&quot;&gt;&#10;          &lt;CardHeader&gt;&#10;            &lt;CardTitle className=&quot;text-3xl font-bold text-center&quot;&gt;&#10;              {content?.title || 'Ethical Policy'}&#10;            &lt;/CardTitle&gt;&#10;          &lt;/CardHeader&gt;&#10;          &lt;CardContent className=&quot;prose max-w-none&quot;&gt;&#10;            &lt;div&#10;              dangerouslySetInnerHTML={{&#10;                __html: content?.content || `&#10;                  &lt;h2&gt;Our Ethical Commitments&lt;/h2&gt;&#10;                  &lt;p&gt;Southern Fashion &amp; Décor is committed to conducting business ethically and responsibly across all aspects of our operations.&lt;/p&gt;&#10;                  &#10;                  &lt;h3&gt;Fair Labor Practices&lt;/h3&gt;&#10;                  &lt;ul&gt;&#10;                    &lt;li&gt;Ensuring fair wages and safe working conditions for all workers&lt;/li&gt;&#10;                    &lt;li&gt;Zero tolerance for child labor or forced labor&lt;/li&gt;&#10;                    &lt;li&gt;Supporting workers' rights to organize and bargain collectively&lt;/li&gt;&#10;                    &lt;li&gt;Providing skills training and development opportunities&lt;/li&gt;&#10;                  &lt;/ul&gt;&#10;                  &#10;                  &lt;h3&gt;Supplier Ethics&lt;/h3&gt;&#10;                  &lt;ul&gt;&#10;                    &lt;li&gt;Working only with suppliers who share our ethical values&lt;/li&gt;&#10;                    &lt;li&gt;Regular audits of supplier facilities and practices&lt;/li&gt;&#10;                    &lt;li&gt;Supporting local artisans and small-scale manufacturers&lt;/li&gt;&#10;                    &lt;li&gt;Transparent supply chain management&lt;/li&gt;&#10;                  &lt;/ul&gt;&#10;                  &#10;                  &lt;h3&gt;Environmental Responsibility&lt;/h3&gt;&#10;                  &lt;ul&gt;&#10;                    &lt;li&gt;Minimizing environmental impact in all operations&lt;/li&gt;&#10;                    &lt;li&gt;Promoting sustainable materials and production methods&lt;/li&gt;&#10;                    &lt;li&gt;Reducing waste and implementing recycling programs&lt;/li&gt;&#10;                    &lt;li&gt;Supporting eco-friendly packaging solutions&lt;/li&gt;&#10;                  &lt;/ul&gt;&#10;                  &#10;                  &lt;h3&gt;Community Engagement&lt;/h3&gt;&#10;                  &lt;ul&gt;&#10;                    &lt;li&gt;Supporting local communities through employment and partnerships&lt;/li&gt;&#10;                    &lt;li&gt;Contributing to education and skill development programs&lt;/li&gt;&#10;                    &lt;li&gt;Participating in charitable initiatives and social causes&lt;/li&gt;&#10;                    &lt;li&gt;Promoting cultural heritage and traditional crafts&lt;/li&gt;&#10;                  &lt;/ul&gt;&#10;                  &#10;                  &lt;h3&gt;Customer Rights&lt;/h3&gt;&#10;                  &lt;ul&gt;&#10;                    &lt;li&gt;Honest and transparent product descriptions&lt;/li&gt;&#10;                    &lt;li&gt;Fair pricing and clear return policies&lt;/li&gt;&#10;                    &lt;li&gt;Protecting customer privacy and data&lt;/li&gt;&#10;                    &lt;li&gt;Accessible customer service and support&lt;/li&gt;&#10;                  &lt;/ul&gt;&#10;                  &#10;                  &lt;h3&gt;Continuous Improvement&lt;/h3&gt;&#10;                  &lt;p&gt;We continuously review and improve our ethical practices, seeking feedback from stakeholders and implementing best practices in corporate social responsibility.&lt;/p&gt;&#10;                `&#10;              }}&#10;            /&gt;&#10;          &lt;/CardContent&gt;&#10;        &lt;/Card&gt;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  )&#10;}&#10;" />
              <option name="updatedContent" value="'use client'&#10;&#10;import FooterPageTemplate from '@/components/FooterPageTemplate'&#10;&#10;export default function EthicsPage() {&#10;  const fallbackContent = `&#10;    &lt;h2&gt;Our Ethical Commitments&lt;/h2&gt;&#10;    &lt;p&gt;Southern Fashion &amp; Décor is committed to conducting business ethically and responsibly across all aspects of our operations.&lt;/p&gt;&#10;    &#10;    &lt;h3&gt;Fair Labor Practices&lt;/h3&gt;&#10;    &lt;ul&gt;&#10;      &lt;li&gt;Ensuring fair wages and safe working conditions for all workers&lt;/li&gt;&#10;      &lt;li&gt;Zero tolerance for child labor or forced labor&lt;/li&gt;&#10;      &lt;li&gt;Supporting workers' rights to organize and bargain collectively&lt;/li&gt;&#10;      &lt;li&gt;Providing skills training and development opportunities&lt;/li&gt;&#10;    &lt;/ul&gt;&#10;    &#10;    &lt;h3&gt;Supplier Ethics&lt;/h3&gt;&#10;    &lt;ul&gt;&#10;      &lt;li&gt;Working only with suppliers who share our ethical values&lt;/li&gt;&#10;      &lt;li&gt;Regular audits of supplier facilities and practices&lt;/li&gt;&#10;      &lt;li&gt;Supporting local artisans and small-scale manufacturers&lt;/li&gt;&#10;      &lt;li&gt;Transparent supply chain management&lt;/li&gt;&#10;    &lt;/ul&gt;&#10;    &#10;    &lt;h3&gt;Environmental Responsibility&lt;/h3&gt;&#10;    &lt;ul&gt;&#10;      &lt;li&gt;Minimizing environmental impact in all operations&lt;/li&gt;&#10;      &lt;li&gt;Promoting sustainable materials and production methods&lt;/li&gt;&#10;      &lt;li&gt;Reducing waste and implementing recycling programs&lt;/li&gt;&#10;      &lt;li&gt;Supporting eco-friendly packaging solutions&lt;/li&gt;&#10;    &lt;/ul&gt;&#10;    &#10;    &lt;h3&gt;Community Engagement&lt;/h3&gt;&#10;    &lt;ul&gt;&#10;      &lt;li&gt;Supporting local communities through employment and partnerships&lt;/li&gt;&#10;      &lt;li&gt;Contributing to education and skill development programs&lt;/li&gt;&#10;      &lt;li&gt;Participating in charitable initiatives and social causes&lt;/li&gt;&#10;      &lt;li&gt;Promoting cultural heritage and traditional crafts&lt;/li&gt;&#10;    &lt;/ul&gt;&#10;    &#10;    &lt;h3&gt;Customer Rights&lt;/h3&gt;&#10;    &lt;ul&gt;&#10;      &lt;li&gt;Honest and transparent product descriptions&lt;/li&gt;&#10;      &lt;li&gt;Fair pricing and clear return policies&lt;/li&gt;&#10;      &lt;li&gt;Protecting customer privacy and data&lt;/li&gt;&#10;      &lt;li&gt;Accessible customer service and support&lt;/li&gt;&#10;    &lt;/ul&gt;&#10;    &#10;    &lt;h3&gt;Continuous Improvement&lt;/h3&gt;&#10;    &lt;p&gt;We continuously review and improve our ethical practices, seeking feedback from stakeholders and implementing best practices in corporate social responsibility.&lt;/p&gt;&#10;  `&#10;&#10;  return (&#10;    &lt;FooterPageTemplate &#10;      slug=&quot;ethics&quot;&#10;      fallbackTitle=&quot;Ethical Policy&quot;&#10;      fallbackContent={fallbackContent}&#10;    /&gt;&#10;  )&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/faq/page.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/faq/page.tsx" />
              <option name="updatedContent" value="import FooterPageTemplate from '@/components/FooterPageTemplate'&#10;&#10;export default function FAQPage() {&#10;  const fallbackContent = `&#10;    &lt;h2&gt;Frequently Asked Questions&lt;/h2&gt;&#10;    &#10;    &lt;h3&gt;How do I place an order?&lt;/h3&gt;&#10;    &lt;p&gt;You can place an order by browsing our products, adding items to your cart, and proceeding to checkout. You'll need to provide your contact and shipping information.&lt;/p&gt;&#10;    &#10;    &lt;h3&gt;What payment methods do you accept?&lt;/h3&gt;&#10;    &lt;p&gt;We accept Visa, Mastercard, and cash on delivery for orders within Bangladesh.&lt;/p&gt;&#10;    &#10;    &lt;h3&gt;How long does delivery take?&lt;/h3&gt;&#10;    &lt;p&gt;Delivery typically takes 1-2 days within Dhaka and 3-5 days for other areas in Bangladesh.&lt;/p&gt;&#10;    &#10;    &lt;h3&gt;Can I return or exchange items?&lt;/h3&gt;&#10;    &lt;p&gt;Yes, we accept returns within 7 days of delivery for unused items in original packaging.&lt;/p&gt;&#10;    &#10;    &lt;h3&gt;Do you offer wholesale pricing?&lt;/h3&gt;&#10;    &lt;p&gt;Yes, we offer special wholesale pricing for bulk orders. Please contact us for more information.&lt;/p&gt;&#10;    &#10;    &lt;h3&gt;How can I track my order?&lt;/h3&gt;&#10;    &lt;p&gt;Once your order is shipped, you'll receive a tracking number via email or SMS to monitor your delivery status.&lt;/p&gt;&#10;    &#10;    &lt;h3&gt;What if I receive a damaged item?&lt;/h3&gt;&#10;    &lt;p&gt;If you receive a damaged item, please contact us immediately with photos. We'll arrange for a replacement or refund.&lt;/p&gt;&#10;  `&#10;&#10;  return (&#10;    &lt;FooterPageTemplate &#10;      slug=&quot;faq&quot;&#10;      fallbackTitle=&quot;Frequently Asked Questions&quot;&#10;      fallbackContent={fallbackContent}&#10;    /&gt;&#10;  )&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/lookbook/page.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/lookbook/page.tsx" />
              <option name="originalContent" value="'use client'&#10;&#10;import { useState, useEffect } from 'react'&#10;import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'&#10;&#10;export default function LookbookPage() {&#10;  const [content, setContent] = useState&lt;any&gt;(null)&#10;  const [loading, setLoading] = useState(true)&#10;&#10;  useEffect(() =&gt; {&#10;    fetchContent()&#10;  }, [])&#10;&#10;  const fetchContent = async () =&gt; {&#10;    try {&#10;      const response = await fetch('/api/footer')&#10;      if (response.ok) {&#10;        const data = await response.json()&#10;        const lookbookContent = data.content.find((item: any) =&gt; item.slug === 'lookbook')&#10;        setContent(lookbookContent)&#10;      }&#10;    } catch (error) {&#10;      console.error('Error fetching content:', error)&#10;    } finally {&#10;      setLoading(false)&#10;    }&#10;  }&#10;&#10;  if (loading) {&#10;    return (&#10;      &lt;div className=&quot;min-h-screen bg-gray-50 flex items-center justify-center&quot;&gt;&#10;        &lt;div className=&quot;animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600&quot;&gt;&lt;/div&gt;&#10;      &lt;/div&gt;&#10;    )&#10;  }&#10;&#10;  return (&#10;    &lt;div className=&quot;min-h-screen bg-gray-50&quot;&gt;&#10;      &lt;div className=&quot;container mx-auto px-4 py-12&quot;&gt;&#10;        &lt;Card className=&quot;max-w-4xl mx-auto&quot;&gt;&#10;          &lt;CardHeader&gt;&#10;            &lt;CardTitle className=&quot;text-3xl font-bold text-center&quot;&gt;&#10;              {content?.title || 'Lookbook'}&#10;            &lt;/CardTitle&gt;&#10;          &lt;/CardHeader&gt;&#10;          &lt;CardContent className=&quot;prose max-w-none&quot;&gt;&#10;            &lt;div&#10;              dangerouslySetInnerHTML={{&#10;                __html: content?.content || `&#10;                  &lt;h2&gt;Southern Fashion &amp; Décor Lookbook&lt;/h2&gt;&#10;                  &lt;p&gt;Discover the latest trends and styling inspiration from our curated collections.&lt;/p&gt;&#10;&#10;                  &lt;h3&gt;Fashion Lookbook&lt;/h3&gt;&#10;                  &lt;p&gt;Explore our seasonal fashion collections featuring the latest trends in clothing, accessories, and footwear. Our lookbook showcases how to style our pieces for different occasions and seasons.&lt;/p&gt;&#10;&#10;                  &lt;h3&gt;Home Décor Inspiration&lt;/h3&gt;&#10;                  &lt;p&gt;Get inspired with our home décor lookbook featuring beautifully styled spaces using our furniture and decorative items. See how our products can transform your living spaces.&lt;/p&gt;&#10;&#10;                  &lt;h3&gt;Seasonal Collections&lt;/h3&gt;&#10;                  &lt;ul&gt;&#10;                    &lt;li&gt;&lt;strong&gt;Spring/Summer:&lt;/strong&gt; Light fabrics, bright colors, and fresh home décor&lt;/li&gt;&#10;                    &lt;li&gt;&lt;strong&gt;Fall/Winter:&lt;/strong&gt; Cozy textures, warm tones, and seasonal decorations&lt;/li&gt;&#10;                    &lt;li&gt;&lt;strong&gt;Festival Collections:&lt;/strong&gt; Special occasion wear and festive décor&lt;/li&gt;&#10;                    &lt;li&gt;&lt;strong&gt;Wedding Season:&lt;/strong&gt; Bridal and formal wear collections&lt;/li&gt;&#10;                  &lt;/ul&gt;&#10;&#10;                  &lt;h3&gt;Styling Tips&lt;/h3&gt;&#10;                  &lt;ul&gt;&#10;                    &lt;li&gt;Mix and match different pieces from our collections&lt;/li&gt;&#10;                    &lt;li&gt;Layer accessories to create unique looks&lt;/li&gt;&#10;                    &lt;li&gt;Combine different textures and patterns in home décor&lt;/li&gt;&#10;                    &lt;li&gt;Create focal points with statement pieces&lt;/li&gt;&#10;                  &lt;/ul&gt;&#10;&#10;                  &lt;h3&gt;Get Featured&lt;/h3&gt;&#10;                  &lt;p&gt;Share your styling creations using our products on social media with #SFDStyle for a chance to be featured in our lookbook!&lt;/p&gt;&#10;                `&#10;              }}&#10;            /&gt;&#10;          &lt;/CardContent&gt;&#10;        &lt;/Card&gt;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  )&#10;}&#10;&#10;" />
              <option name="updatedContent" value="'use client'&#10;&#10;import FooterPageTemplate from '@/components/FooterPageTemplate'&#10;&#10;export default function LookbookPage() {&#10;  const fallbackContent = `&#10;    &lt;h2&gt;Southern Fashion &amp; Décor Lookbook&lt;/h2&gt;&#10;    &lt;p&gt;Discover the latest trends and styling inspiration from our curated collections.&lt;/p&gt;&#10;    &#10;    &lt;h3&gt;Fashion Lookbook&lt;/h3&gt;&#10;    &lt;p&gt;Explore our seasonal fashion collections featuring the latest trends in clothing, accessories, and footwear. Our lookbook showcases how to style our pieces for different occasions and seasons.&lt;/p&gt;&#10;    &#10;    &lt;h3&gt;Home Décor Inspiration&lt;/h3&gt;&#10;    &lt;p&gt;Get inspired with our home décor lookbook featuring beautifully styled spaces using our furniture and decorative items. See how our products can transform your living spaces.&lt;/p&gt;&#10;    &#10;    &lt;h3&gt;Seasonal Collections&lt;/h3&gt;&#10;    &lt;ul&gt;&#10;      &lt;li&gt;&lt;strong&gt;Spring/Summer:&lt;/strong&gt; Light fabrics, bright colors, and fresh home décor&lt;/li&gt;&#10;      &lt;li&gt;&lt;strong&gt;Fall/Winter:&lt;/strong&gt; Cozy textures, warm tones, and seasonal decorations&lt;/li&gt;&#10;      &lt;li&gt;&lt;strong&gt;Festival Collections:&lt;/strong&gt; Special occasion wear and festive décor&lt;/li&gt;&#10;      &lt;li&gt;&lt;strong&gt;Wedding Season:&lt;/strong&gt; Bridal and formal wear collections&lt;/li&gt;&#10;    &lt;/ul&gt;&#10;    &#10;    &lt;h3&gt;Styling Tips&lt;/h3&gt;&#10;    &lt;ul&gt;&#10;      &lt;li&gt;Mix and match different pieces from our collections&lt;/li&gt;&#10;      &lt;li&gt;Layer accessories to create unique looks&lt;/li&gt;&#10;      &lt;li&gt;Combine different textures and patterns in home décor&lt;/li&gt;&#10;      &lt;li&gt;Create focal points with statement pieces&lt;/li&gt;&#10;    &lt;/ul&gt;&#10;    &#10;    &lt;h3&gt;Get Featured&lt;/h3&gt;&#10;    &lt;p&gt;Share your styling creations using our products on social media with #SFDStyle for a chance to be featured in our lookbook!&lt;/p&gt;&#10;  `&#10;&#10;  return (&#10;    &lt;FooterPageTemplate &#10;      slug=&quot;lookbook&quot;&#10;      fallbackTitle=&quot;Lookbook&quot;&#10;      fallbackContent={fallbackContent}&#10;    /&gt;&#10;  )&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/privacy/page.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/privacy/page.tsx" />
              <option name="updatedContent" value="import FooterPageTemplate from '@/components/FooterPageTemplate'&#10;&#10;export default function PrivacyPage() {&#10;  const fallbackContent = `&#10;    &lt;h2&gt;Privacy Policy&lt;/h2&gt;&#10;    &lt;p&gt;At Southern Fashion &amp; Décor, we are committed to protecting your privacy and ensuring the security of your personal information.&lt;/p&gt;&#10;    &#10;    &lt;h3&gt;Information We Collect&lt;/h3&gt;&#10;    &lt;ul&gt;&#10;      &lt;li&gt;Personal identification information (Name, email address, phone number)&lt;/li&gt;&#10;      &lt;li&gt;Billing and shipping addresses&lt;/li&gt;&#10;      &lt;li&gt;Payment information (processed securely through our payment partners)&lt;/li&gt;&#10;      &lt;li&gt;Website usage data and preferences&lt;/li&gt;&#10;    &lt;/ul&gt;&#10;    &#10;    &lt;h3&gt;How We Use Your Information&lt;/h3&gt;&#10;    &lt;ul&gt;&#10;      &lt;li&gt;To process and fulfill your orders&lt;/li&gt;&#10;      &lt;li&gt;To communicate with you about your orders and account&lt;/li&gt;&#10;      &lt;li&gt;To improve our products and services&lt;/li&gt;&#10;      &lt;li&gt;To send promotional emails (with your consent)&lt;/li&gt;&#10;    &lt;/ul&gt;&#10;    &#10;    &lt;h3&gt;Information Sharing&lt;/h3&gt;&#10;    &lt;p&gt;We do not sell, trade, or otherwise transfer your personal information to third parties without your consent, except as described in this policy.&lt;/p&gt;&#10;    &#10;    &lt;h3&gt;Data Security&lt;/h3&gt;&#10;    &lt;p&gt;We implement appropriate security measures to protect your personal information against unauthorized access, alteration, disclosure, or destruction.&lt;/p&gt;&#10;    &#10;    &lt;h3&gt;Contact Us&lt;/h3&gt;&#10;    &lt;p&gt;If you have any questions about this Privacy Policy, please contact us at privacy@sfdbd.com&lt;/p&gt;&#10;  `&#10;&#10;  return (&#10;    &lt;FooterPageTemplate &#10;      slug=&quot;privacy&quot;&#10;      fallbackTitle=&quot;Privacy Policy&quot;&#10;      fallbackContent={fallbackContent}&#10;    /&gt;&#10;  )&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/shipping/page.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/shipping/page.tsx" />
              <option name="originalContent" value="'use client'&#10;&#10;import { useState, useEffect } from 'react'&#10;import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'&#10;&#10;export default function ShippingPage() {&#10;  const [content, setContent] = useState&lt;any&gt;(null)&#10;  const [loading, setLoading] = useState(true)&#10;&#10;  useEffect(() =&gt; {&#10;    fetchContent()&#10;  }, [])&#10;&#10;  const fetchContent = async () =&gt; {&#10;    try {&#10;      const response = await fetch('/api/footer')&#10;      if (response.ok) {&#10;        const data = await response.json()&#10;        const shippingContent = data.content.find((item: any) =&gt; item.slug === 'shipping')&#10;        setContent(shippingContent)&#10;      }&#10;    } catch (error) {&#10;      console.error('Error fetching content:', error)&#10;    } finally {&#10;      setLoading(false)&#10;    }&#10;  }&#10;&#10;  if (loading) {&#10;    return (&#10;      &lt;div className=&quot;min-h-screen bg-gray-50 flex items-center justify-center&quot;&gt;&#10;        &lt;div className=&quot;animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600&quot;&gt;&lt;/div&gt;&#10;      &lt;/div&gt;&#10;    )&#10;  }&#10;&#10;  return (&#10;    &lt;div className=&quot;min-h-screen bg-gray-50&quot;&gt;&#10;      &lt;div className=&quot;container mx-auto px-4 py-12&quot;&gt;&#10;        &lt;Card className=&quot;max-w-4xl mx-auto&quot;&gt;&#10;          &lt;CardHeader&gt;&#10;            &lt;CardTitle className=&quot;text-3xl font-bold text-center&quot;&gt;&#10;              {content?.title || 'BD Shipping'}&#10;            &lt;/CardTitle&gt;&#10;          &lt;/CardHeader&gt;&#10;          &lt;CardContent className=&quot;prose max-w-none&quot;&gt;&#10;            &lt;div&#10;              dangerouslySetInnerHTML={{&#10;                __html: content?.content || `&#10;                  &lt;h2&gt;Bangladesh Shipping Information&lt;/h2&gt;&#10;                  &lt;p&gt;We provide reliable shipping services across Bangladesh through our trusted courier partners.&lt;/p&gt;&#10;                  &#10;                  &lt;h3&gt;Shipping Areas&lt;/h3&gt;&#10;                  &lt;ul&gt;&#10;                    &lt;li&gt;&lt;strong&gt;Dhaka Metro:&lt;/strong&gt; Same day or next day delivery&lt;/li&gt;&#10;                    &lt;li&gt;&lt;strong&gt;Major Cities:&lt;/strong&gt; Chittagong, Sylhet, Rajshahi, Khulna, Barisal, Rangpur&lt;/li&gt;&#10;                    &lt;li&gt;&lt;strong&gt;District Cities:&lt;/strong&gt; All 64 district headquarters&lt;/li&gt;&#10;                    &lt;li&gt;&lt;strong&gt;Upazila Level:&lt;/strong&gt; Most upazila areas covered&lt;/li&gt;&#10;                  &lt;/ul&gt;&#10;                  &#10;                  &lt;h3&gt;Shipping Rates&lt;/h3&gt;&#10;                  &lt;table&gt;&#10;                    &lt;tr&gt;&lt;td&gt;Inside Dhaka&lt;/td&gt;&lt;td&gt;80 BDT&lt;/td&gt;&lt;/tr&gt;&#10;                    &lt;tr&gt;&lt;td&gt;Outside Dhaka (Major Cities)&lt;/td&gt;&lt;td&gt;120 BDT&lt;/td&gt;&lt;/tr&gt;&#10;                    &lt;tr&gt;&lt;td&gt;District/Upazila Areas&lt;/td&gt;&lt;td&gt;150 BDT&lt;/td&gt;&lt;/tr&gt;&#10;                    &lt;tr&gt;&lt;td&gt;Remote Areas&lt;/td&gt;&lt;td&gt;200 BDT&lt;/td&gt;&lt;/tr&gt;&#10;                  &lt;/table&gt;&#10;                  &#10;                  &lt;h3&gt;Free Shipping&lt;/h3&gt;&#10;                  &lt;p&gt;Enjoy free shipping on orders above 2000 BDT anywhere in Bangladesh!&lt;/p&gt;&#10;                  &#10;                  &lt;h3&gt;Delivery Partners&lt;/h3&gt;&#10;                  &lt;ul&gt;&#10;                    &lt;li&gt;Pathao Courier&lt;/li&gt;&#10;                    &lt;li&gt;RedX&lt;/li&gt;&#10;                    &lt;li&gt;Steadfast Courier&lt;/li&gt;&#10;                    &lt;li&gt;SA Paribahan&lt;/li&gt;&#10;                  &lt;/ul&gt;&#10;                `&#10;              }}&#10;            /&gt;&#10;          &lt;/CardContent&gt;&#10;        &lt;/Card&gt;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  )&#10;}&#10;" />
              <option name="updatedContent" value="'use client'&#10;&#10;import FooterPageTemplate from '@/components/FooterPageTemplate'&#10;&#10;export default function ShippingPage() {&#10;  const fallbackContent = `&#10;    &lt;h2&gt;Bangladesh Shipping Information&lt;/h2&gt;&#10;    &lt;p&gt;We provide reliable shipping services across Bangladesh through our trusted courier partners.&lt;/p&gt;&#10;    &#10;    &lt;h3&gt;Shipping Areas&lt;/h3&gt;&#10;    &lt;ul&gt;&#10;      &lt;li&gt;&lt;strong&gt;Dhaka Metro:&lt;/strong&gt; Same day or next day delivery&lt;/li&gt;&#10;      &lt;li&gt;&lt;strong&gt;Major Cities:&lt;/strong&gt; Chittagong, Sylhet, Rajshahi, Khulna, Barisal, Rangpur&lt;/li&gt;&#10;      &lt;li&gt;&lt;strong&gt;District Cities:&lt;/strong&gt; All 64 district headquarters&lt;/li&gt;&#10;      &lt;li&gt;&lt;strong&gt;Upazila Level:&lt;/strong&gt; Most upazila areas covered&lt;/li&gt;&#10;    &lt;/ul&gt;&#10;    &#10;    &lt;h3&gt;Shipping Rates&lt;/h3&gt;&#10;    &lt;table style=&quot;width: 100%; border-collapse: collapse; margin: 20px 0;&quot;&gt;&#10;      &lt;tr style=&quot;background-color: #f5f5f5;&quot;&gt;&#10;        &lt;td style=&quot;border: 1px solid #ddd; padding: 8px; font-weight: bold;&quot;&gt;Area&lt;/td&gt;&#10;        &lt;td style=&quot;border: 1px solid #ddd; padding: 8px; font-weight: bold;&quot;&gt;Cost&lt;/td&gt;&#10;      &lt;/tr&gt;&#10;      &lt;tr&gt;&#10;        &lt;td style=&quot;border: 1px solid #ddd; padding: 8px;&quot;&gt;Inside Dhaka&lt;/td&gt;&#10;        &lt;td style=&quot;border: 1px solid #ddd; padding: 8px;&quot;&gt;80 BDT&lt;/td&gt;&#10;      &lt;/tr&gt;&#10;      &lt;tr&gt;&#10;        &lt;td style=&quot;border: 1px solid #ddd; padding: 8px;&quot;&gt;Outside Dhaka (Major Cities)&lt;/td&gt;&#10;        &lt;td style=&quot;border: 1px solid #ddd; padding: 8px;&quot;&gt;120 BDT&lt;/td&gt;&#10;      &lt;/tr&gt;&#10;      &lt;tr&gt;&#10;        &lt;td style=&quot;border: 1px solid #ddd; padding: 8px;&quot;&gt;District/Upazila Areas&lt;/td&gt;&#10;        &lt;td style=&quot;border: 1px solid #ddd; padding: 8px;&quot;&gt;150 BDT&lt;/td&gt;&#10;      &lt;/tr&gt;&#10;      &lt;tr&gt;&#10;        &lt;td style=&quot;border: 1px solid #ddd; padding: 8px;&quot;&gt;Remote Areas&lt;/td&gt;&#10;        &lt;td style=&quot;border: 1px solid #ddd; padding: 8px;&quot;&gt;200 BDT&lt;/td&gt;&#10;      &lt;/tr&gt;&#10;    &lt;/table&gt;&#10;    &#10;    &lt;h3&gt;Free Shipping&lt;/h3&gt;&#10;    &lt;p&gt;Enjoy free shipping on orders above 2000 BDT anywhere in Bangladesh!&lt;/p&gt;&#10;    &#10;    &lt;h3&gt;Delivery Partners&lt;/h3&gt;&#10;    &lt;ul&gt;&#10;      &lt;li&gt;Pathao Courier&lt;/li&gt;&#10;      &lt;li&gt;RedX&lt;/li&gt;&#10;      &lt;li&gt;Steadfast Courier&lt;/li&gt;&#10;      &lt;li&gt;SA Paribahan&lt;/li&gt;&#10;    &lt;/ul&gt;&#10;  `&#10;&#10;  return (&#10;    &lt;FooterPageTemplate &#10;      slug=&quot;shipping&quot;&#10;      fallbackTitle=&quot;BD Shipping&quot;&#10;      fallbackContent={fallbackContent}&#10;    /&gt;&#10;  )&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/showroom/page.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/showroom/page.tsx" />
              <option name="originalContent" value="'use client'&#10;&#10;import { useState, useEffect } from 'react'&#10;import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'&#10;&#10;export default function ShowroomPage() {&#10;  const [content, setContent] = useState&lt;any&gt;(null)&#10;  const [loading, setLoading] = useState(true)&#10;&#10;  useEffect(() =&gt; {&#10;    fetchContent()&#10;  }, [])&#10;&#10;  const fetchContent = async () =&gt; {&#10;    try {&#10;      const response = await fetch('/api/footer')&#10;      if (response.ok) {&#10;        const data = await response.json()&#10;        const showroomContent = data.content.find((item: any) =&gt; item.slug === 'showroom')&#10;        setContent(showroomContent)&#10;      }&#10;    } catch (error) {&#10;      console.error('Error fetching content:', error)&#10;    } finally {&#10;      setLoading(false)&#10;    }&#10;  }&#10;&#10;  if (loading) {&#10;    return (&#10;      &lt;div className=&quot;min-h-screen bg-gray-50 flex items-center justify-center&quot;&gt;&#10;        &lt;div className=&quot;animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600&quot;&gt;&lt;/div&gt;&#10;      &lt;/div&gt;&#10;    )&#10;  }&#10;&#10;  return (&#10;    &lt;div className=&quot;min-h-screen bg-gray-50&quot;&gt;&#10;      &lt;div className=&quot;container mx-auto px-4 py-12&quot;&gt;&#10;        &lt;Card className=&quot;max-w-4xl mx-auto&quot;&gt;&#10;          &lt;CardHeader&gt;&#10;            &lt;CardTitle className=&quot;text-3xl font-bold text-center&quot;&gt;&#10;              {content?.title || 'Visit Our Showroom'}&#10;            &lt;/CardTitle&gt;&#10;          &lt;/CardHeader&gt;&#10;          &lt;CardContent className=&quot;prose max-w-none&quot;&gt;&#10;            &lt;div &#10;              dangerouslySetInnerHTML={{ &#10;                __html: content?.content || `&#10;                  &lt;h2&gt;Southern Fashion &amp; Décor Showroom&lt;/h2&gt;&#10;                  &lt;p&gt;Experience our complete collection in person at our beautiful showroom in Dhaka.&lt;/p&gt;&#10;                  &#10;                  &lt;h3&gt;Showroom Location&lt;/h3&gt;&#10;                  &lt;p&gt;&lt;strong&gt;Address:&lt;/strong&gt; House #123, Road #15, Block C, Bashundhara R/A, Dhaka-1229&lt;/p&gt;&#10;                  &lt;p&gt;&lt;strong&gt;Phone:&lt;/strong&gt; +880 1711 123456&lt;/p&gt;&#10;                  &lt;p&gt;&lt;strong&gt;Email:&lt;/strong&gt; showroom@sfdbd.com&lt;/p&gt;&#10;                  &#10;                  &lt;h3&gt;Opening Hours&lt;/h3&gt;&#10;                  &lt;ul&gt;&#10;                    &lt;li&gt;&lt;strong&gt;Saturday - Thursday:&lt;/strong&gt; 10:00 AM - 9:00 PM&lt;/li&gt;&#10;                    &lt;li&gt;&lt;strong&gt;Friday:&lt;/strong&gt; 2:00 PM - 9:00 PM&lt;/li&gt;&#10;                    &lt;li&gt;&lt;strong&gt;Public Holidays:&lt;/strong&gt; 4:00 PM - 9:00 PM&lt;/li&gt;&#10;                  &lt;/ul&gt;&#10;                  &#10;                  &lt;h3&gt;What to Expect&lt;/h3&gt;&#10;                  &lt;ul&gt;&#10;                    &lt;li&gt;Browse our complete fashion and décor collections&lt;/li&gt;&#10;                    &lt;li&gt;Touch and feel product quality before purchasing&lt;/li&gt;&#10;                    &lt;li&gt;Get personalized styling advice from our experts&lt;/li&gt;&#10;                    &lt;li&gt;Enjoy exclusive showroom-only deals and discounts&lt;/li&gt;&#10;                    &lt;li&gt;Free parking available&lt;/li&gt;&#10;                  &lt;/ul&gt;&#10;                  &#10;                  &lt;h3&gt;Special Services&lt;/h3&gt;&#10;                  &lt;ul&gt;&#10;                    &lt;li&gt;Personal shopping appointments&lt;/li&gt;&#10;                    &lt;li&gt;Home décor consultation&lt;/li&gt;&#10;                    &lt;li&gt;Bulk order processing&lt;/li&gt;&#10;                    &lt;li&gt;Custom design requests&lt;/li&gt;&#10;                  &lt;/ul&gt;&#10;                  &#10;                  &lt;h3&gt;Directions&lt;/h3&gt;&#10;                  &lt;p&gt;Located in the heart of Bashundhara R/A, our showroom is easily accessible by public transport and private vehicles. Detailed directions available upon request.&lt;/p&gt;&#10;                `&#10;              }}&#10;            /&gt;&#10;          &lt;/CardContent&gt;&#10;        &lt;/Card&gt;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  )&#10;}&#10;" />
              <option name="updatedContent" value="'use client'&#10;&#10;import FooterPageTemplate from '@/components/FooterPageTemplate'&#10;&#10;export default function ShowroomPage() {&#10;  const fallbackContent = `&#10;    &lt;h2&gt;Southern Fashion &amp; Décor Showroom&lt;/h2&gt;&#10;    &lt;p&gt;Experience our complete collection in person at our beautiful showroom in Dhaka.&lt;/p&gt;&#10;    &#10;    &lt;h3&gt;Showroom Location&lt;/h3&gt;&#10;    &lt;p&gt;&lt;strong&gt;Address:&lt;/strong&gt; House #123, Road #15, Block C, Bashundhara R/A, Dhaka-1229&lt;/p&gt;&#10;    &lt;p&gt;&lt;strong&gt;Phone:&lt;/strong&gt; +880 1711 123456&lt;/p&gt;&#10;    &lt;p&gt;&lt;strong&gt;Email:&lt;/strong&gt; showroom@sfdbd.com&lt;/p&gt;&#10;    &#10;    &lt;h3&gt;Opening Hours&lt;/h3&gt;&#10;    &lt;ul&gt;&#10;      &lt;li&gt;&lt;strong&gt;Saturday - Thursday:&lt;/strong&gt; 10:00 AM - 9:00 PM&lt;/li&gt;&#10;      &lt;li&gt;&lt;strong&gt;Friday:&lt;/strong&gt; 2:00 PM - 9:00 PM&lt;/li&gt;&#10;      &lt;li&gt;&lt;strong&gt;Public Holidays:&lt;/strong&gt; 4:00 PM - 9:00 PM&lt;/li&gt;&#10;    &lt;/ul&gt;&#10;    &#10;    &lt;h3&gt;What to Expect&lt;/h3&gt;&#10;    &lt;ul&gt;&#10;      &lt;li&gt;Browse our complete fashion and décor collections&lt;/li&gt;&#10;      &lt;li&gt;Touch and feel product quality before purchasing&lt;/li&gt;&#10;      &lt;li&gt;Get personalized styling advice from our experts&lt;/li&gt;&#10;      &lt;li&gt;Enjoy exclusive showroom-only deals and discounts&lt;/li&gt;&#10;      &lt;li&gt;Free parking available&lt;/li&gt;&#10;    &lt;/ul&gt;&#10;    &#10;    &lt;h3&gt;Special Services&lt;/h3&gt;&#10;    &lt;ul&gt;&#10;      &lt;li&gt;Personal shopping appointments&lt;/li&gt;&#10;      &lt;li&gt;Home décor consultation&lt;/li&gt;&#10;      &lt;li&gt;Bulk order processing&lt;/li&gt;&#10;      &lt;li&gt;Custom design requests&lt;/li&gt;&#10;    &lt;/ul&gt;&#10;    &#10;    &lt;h3&gt;Directions&lt;/h3&gt;&#10;    &lt;p&gt;Located in the heart of Bashundhara R/A, our showroom is easily accessible by public transport and private vehicles. Detailed directions available upon request.&lt;/p&gt;&#10;  `&#10;&#10;  return (&#10;    &lt;FooterPageTemplate &#10;      slug=&quot;showroom&quot;&#10;      fallbackTitle=&quot;Visit Our Showroom&quot;&#10;      fallbackContent={fallbackContent}&#10;    /&gt;&#10;  )&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/sustainability/page.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/sustainability/page.tsx" />
              <option name="originalContent" value="'use client'&#10;&#10;import { useState, useEffect } from 'react'&#10;import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'&#10;&#10;export default function SustainabilityPage() {&#10;  const [content, setContent] = useState&lt;any&gt;(null)&#10;  const [loading, setLoading] = useState(true)&#10;&#10;  useEffect(() =&gt; {&#10;    fetchContent()&#10;  }, [])&#10;&#10;  const fetchContent = async () =&gt; {&#10;    try {&#10;      const response = await fetch('/api/footer')&#10;      if (response.ok) {&#10;        const data = await response.json()&#10;        const sustainabilityContent = data.content.find((item: any) =&gt; item.slug === 'sustainability')&#10;        setContent(sustainabilityContent)&#10;      }&#10;    } catch (error) {&#10;      console.error('Error fetching content:', error)&#10;    } finally {&#10;      setLoading(false)&#10;    }&#10;  }&#10;&#10;  if (loading) {&#10;    return (&#10;      &lt;div className=&quot;min-h-screen bg-gray-50 flex items-center justify-center&quot;&gt;&#10;        &lt;div className=&quot;animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600&quot;&gt;&lt;/div&gt;&#10;      &lt;/div&gt;&#10;    )&#10;  }&#10;&#10;  return (&#10;    &lt;div className=&quot;min-h-screen bg-gray-50&quot;&gt;&#10;      &lt;div className=&quot;container mx-auto px-4 py-12&quot;&gt;&#10;        &lt;Card className=&quot;max-w-4xl mx-auto&quot;&gt;&#10;          &lt;CardHeader&gt;&#10;            &lt;CardTitle className=&quot;text-3xl font-bold text-center&quot;&gt;&#10;              {content?.title || 'Sustainability Mission'}&#10;            &lt;/CardTitle&gt;&#10;          &lt;/CardHeader&gt;&#10;          &lt;CardContent className=&quot;prose max-w-none&quot;&gt;&#10;            &lt;div&#10;              dangerouslySetInnerHTML={{&#10;                __html: content?.content || `&#10;                  &lt;h2&gt;Our Sustainability Mission&lt;/h2&gt;&#10;                  &lt;p&gt;At Southern Fashion &amp; Décor, we are committed to building a sustainable future through responsible business practices and environmental stewardship.&lt;/p&gt;&#10;                  &#10;                  &lt;h3&gt;Sustainable Materials&lt;/h3&gt;&#10;                  &lt;ul&gt;&#10;                    &lt;li&gt;Prioritizing eco-friendly and renewable materials&lt;/li&gt;&#10;                    &lt;li&gt;Using organic cotton and sustainable fabrics&lt;/li&gt;&#10;                    &lt;li&gt;Sourcing recycled and upcycled materials&lt;/li&gt;&#10;                    &lt;li&gt;Supporting sustainable wood and bamboo products&lt;/li&gt;&#10;                  &lt;/ul&gt;&#10;                  &#10;                  &lt;h3&gt;Eco-Friendly Production&lt;/h3&gt;&#10;                  &lt;ul&gt;&#10;                    &lt;li&gt;Implementing energy-efficient manufacturing processes&lt;/li&gt;&#10;                    &lt;li&gt;Reducing water consumption and waste&lt;/li&gt;&#10;                    &lt;li&gt;Using non-toxic dyes and chemicals&lt;/li&gt;&#10;                    &lt;li&gt;Minimizing carbon footprint in production&lt;/li&gt;&#10;                  &lt;/ul&gt;&#10;                  &#10;                  &lt;h3&gt;Sustainable Packaging&lt;/h3&gt;&#10;                  &lt;ul&gt;&#10;                    &lt;li&gt;Using biodegradable and recyclable packaging materials&lt;/li&gt;&#10;                    &lt;li&gt;Minimizing packaging waste&lt;/li&gt;&#10;                    &lt;li&gt;Encouraging customers to reuse and recycle&lt;/li&gt;&#10;                    &lt;li&gt;Eliminating single-use plastics where possible&lt;/li&gt;&#10;                  &lt;/ul&gt;&#10;                  &#10;                  &lt;h3&gt;Circular Economy&lt;/h3&gt;&#10;                  &lt;ul&gt;&#10;                    &lt;li&gt;Designing products for longevity and durability&lt;/li&gt;&#10;                    &lt;li&gt;Offering repair and refurbishment services&lt;/li&gt;&#10;                    &lt;li&gt;Implementing take-back programs for end-of-life products&lt;/li&gt;&#10;                    &lt;li&gt;Promoting upcycling and creative reuse&lt;/li&gt;&#10;                  &lt;/ul&gt;&#10;                  &#10;                  &lt;h3&gt;Environmental Initiatives&lt;/h3&gt;&#10;                  &lt;ul&gt;&#10;                    &lt;li&gt;Tree planting and reforestation programs&lt;/li&gt;&#10;                    &lt;li&gt;Supporting renewable energy projects&lt;/li&gt;&#10;                    &lt;li&gt;Participating in environmental awareness campaigns&lt;/li&gt;&#10;                    &lt;li&gt;Partnering with environmental organizations&lt;/li&gt;&#10;                  &lt;/ul&gt;&#10;                  &#10;                  &lt;h3&gt;Our Goals&lt;/h3&gt;&#10;                  &lt;ul&gt;&#10;                    &lt;li&gt;Achieve carbon neutrality by 2030&lt;/li&gt;&#10;                    &lt;li&gt;Use 100% sustainable materials by 2028&lt;/li&gt;&#10;                    &lt;li&gt;Zero waste to landfill by 2027&lt;/li&gt;&#10;                    &lt;li&gt;Support 1000+ local artisans and sustainable producers&lt;/li&gt;&#10;                  &lt;/ul&gt;&#10;                  &#10;                  &lt;h3&gt;Join Our Mission&lt;/h3&gt;&#10;                  &lt;p&gt;We invite our customers to join us in this sustainability journey. Choose eco-friendly products, practice conscious consumption, and help us build a better future for generations to come.&lt;/p&gt;&#10;                `&#10;              }}&#10;            /&gt;&#10;          &lt;/CardContent&gt;&#10;        &lt;/Card&gt;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  )&#10;}&#10;" />
              <option name="updatedContent" value="'use client'&#10;&#10;import FooterPageTemplate from '@/components/FooterPageTemplate'&#10;&#10;export default function SustainabilityPage() {&#10;  const fallbackContent = `&#10;    &lt;h2&gt;Our Sustainability Mission&lt;/h2&gt;&#10;    &lt;p&gt;At Southern Fashion &amp; Décor, we are committed to building a sustainable future through responsible business practices and environmental stewardship.&lt;/p&gt;&#10;    &#10;    &lt;h3&gt;Sustainable Materials&lt;/h3&gt;&#10;    &lt;ul&gt;&#10;      &lt;li&gt;Prioritizing eco-friendly and renewable materials&lt;/li&gt;&#10;      &lt;li&gt;Using organic cotton and sustainable fabrics&lt;/li&gt;&#10;      &lt;li&gt;Sourcing recycled and upcycled materials&lt;/li&gt;&#10;      &lt;li&gt;Supporting sustainable wood and bamboo products&lt;/li&gt;&#10;    &lt;/ul&gt;&#10;    &#10;    &lt;h3&gt;Eco-Friendly Production&lt;/h3&gt;&#10;    &lt;ul&gt;&#10;      &lt;li&gt;Implementing energy-efficient manufacturing processes&lt;/li&gt;&#10;      &lt;li&gt;Reducing water consumption and waste&lt;/li&gt;&#10;      &lt;li&gt;Using non-toxic dyes and chemicals&lt;/li&gt;&#10;      &lt;li&gt;Minimizing carbon footprint in production&lt;/li&gt;&#10;    &lt;/ul&gt;&#10;    &#10;    &lt;h3&gt;Sustainable Packaging&lt;/h3&gt;&#10;    &lt;ul&gt;&#10;      &lt;li&gt;Using biodegradable and recyclable packaging materials&lt;/li&gt;&#10;      &lt;li&gt;Minimizing packaging waste&lt;/li&gt;&#10;      &lt;li&gt;Encouraging customers to reuse and recycle&lt;/li&gt;&#10;      &lt;li&gt;Eliminating single-use plastics where possible&lt;/li&gt;&#10;    &lt;/ul&gt;&#10;    &#10;    &lt;h3&gt;Circular Economy&lt;/h3&gt;&#10;    &lt;ul&gt;&#10;      &lt;li&gt;Designing products for longevity and durability&lt;/li&gt;&#10;      &lt;li&gt;Offering repair and refurbishment services&lt;/li&gt;&#10;      &lt;li&gt;Implementing take-back programs for end-of-life products&lt;/li&gt;&#10;      &lt;li&gt;Promoting upcycling and creative reuse&lt;/li&gt;&#10;    &lt;/ul&gt;&#10;    &#10;    &lt;h3&gt;Environmental Initiatives&lt;/h3&gt;&#10;    &lt;ul&gt;&#10;      &lt;li&gt;Tree planting and reforestation programs&lt;/li&gt;&#10;      &lt;li&gt;Supporting renewable energy projects&lt;/li&gt;&#10;      &lt;li&gt;Participating in environmental awareness campaigns&lt;/li&gt;&#10;      &lt;li&gt;Partnering with environmental organizations&lt;/li&gt;&#10;    &lt;/ul&gt;&#10;    &#10;    &lt;h3&gt;Our Goals&lt;/h3&gt;&#10;    &lt;ul&gt;&#10;      &lt;li&gt;Achieve carbon neutrality by 2030&lt;/li&gt;&#10;      &lt;li&gt;Use 100% sustainable materials by 2028&lt;/li&gt;&#10;      &lt;li&gt;Zero waste to landfill by 2027&lt;/li&gt;&#10;      &lt;li&gt;Support 1000+ local artisans and sustainable producers&lt;/li&gt;&#10;    &lt;/ul&gt;&#10;    &#10;    &lt;h3&gt;Join Our Mission&lt;/h3&gt;&#10;    &lt;p&gt;We invite our customers to join us in this sustainability journey. Choose eco-friendly products, practice conscious consumption, and help us build a better future for generations to come.&lt;/p&gt;&#10;  `&#10;&#10;  return (&#10;    &lt;FooterPageTemplate &#10;      slug=&quot;sustainability&quot;&#10;      fallbackTitle=&quot;Sustainability Mission&quot;&#10;      fallbackContent={fallbackContent}&#10;    /&gt;&#10;  )&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/terms/page.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/terms/page.tsx" />
              <option name="updatedContent" value="import FooterPageTemplate from '@/components/FooterPageTemplate'&#10;&#10;export default function TermsPage() {&#10;  const fallbackContent = `&#10;    &lt;h2&gt;Terms and Conditions&lt;/h2&gt;&#10;    &lt;p&gt;Welcome to Southern Fashion &amp; Décor. These terms and conditions outline the rules and regulations for the use of our website and services.&lt;/p&gt;&#10;    &#10;    &lt;h3&gt;1. Acceptance of Terms&lt;/h3&gt;&#10;    &lt;p&gt;By accessing and using this website, you accept and agree to be bound by the terms and provision of this agreement.&lt;/p&gt;&#10;    &#10;    &lt;h3&gt;2. Product Information&lt;/h3&gt;&#10;    &lt;p&gt;We strive to provide accurate product descriptions and images. However, slight variations in color and design may occur due to photographic lighting and monitor settings.&lt;/p&gt;&#10;    &#10;    &lt;h3&gt;3. Orders and Payment&lt;/h3&gt;&#10;    &lt;p&gt;All orders are subject to acceptance and availability. Payment must be made in full before dispatch of goods.&lt;/p&gt;&#10;    &#10;    &lt;h3&gt;4. Returns and Refunds&lt;/h3&gt;&#10;    &lt;p&gt;Returns are accepted within 7 days of delivery for unused items in original packaging. Refunds will be processed within 7-10 business days.&lt;/p&gt;&#10;    &#10;    &lt;h3&gt;5. Limitation of Liability&lt;/h3&gt;&#10;    &lt;p&gt;Southern Fashion &amp; Décor shall not be liable for any direct, indirect, or consequential damages arising from the use of our products or services.&lt;/p&gt;&#10;  `&#10;&#10;  return (&#10;    &lt;FooterPageTemplate &#10;      slug=&quot;terms&quot;&#10;      fallbackTitle=&quot;Terms &amp; Conditions&quot;&#10;      fallbackContent={fallbackContent}&#10;    /&gt;&#10;  )&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/trade-shows/page.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/trade-shows/page.tsx" />
              <option name="originalContent" value="'use client'&#10;&#10;import { useState, useEffect } from 'react'&#10;import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'&#10;&#10;export default function TradeShowsPage() {&#10;  const [content, setContent] = useState&lt;any&gt;(null)&#10;  const [loading, setLoading] = useState(true)&#10;&#10;  useEffect(() =&gt; {&#10;    fetchContent()&#10;  }, [])&#10;&#10;  const fetchContent = async () =&gt; {&#10;    try {&#10;      const response = await fetch('/api/footer')&#10;      if (response.ok) {&#10;        const data = await response.json()&#10;        const tradeShowsContent = data.content.find((item: any) =&gt; item.slug === 'trade-shows')&#10;        setContent(tradeShowsContent)&#10;      }&#10;    } catch (error) {&#10;      console.error('Error fetching content:', error)&#10;    } finally {&#10;      setLoading(false)&#10;    }&#10;  }&#10;&#10;  if (loading) {&#10;    return (&#10;      &lt;div className=&quot;min-h-screen bg-gray-50 flex items-center justify-center&quot;&gt;&#10;        &lt;div className=&quot;animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600&quot;&gt;&lt;/div&gt;&#10;      &lt;/div&gt;&#10;    )&#10;  }&#10;&#10;  return (&#10;    &lt;div className=&quot;min-h-screen bg-gray-50&quot;&gt;&#10;      &lt;div className=&quot;container mx-auto px-4 py-12&quot;&gt;&#10;        &lt;Card className=&quot;max-w-4xl mx-auto&quot;&gt;&#10;          &lt;CardHeader&gt;&#10;            &lt;CardTitle className=&quot;text-3xl font-bold text-center&quot;&gt;&#10;              {content?.title || 'Trade Shows'}&#10;            &lt;/CardTitle&gt;&#10;          &lt;/CardHeader&gt;&#10;          &lt;CardContent className=&quot;prose max-w-none&quot;&gt;&#10;            &lt;div&#10;              dangerouslySetInnerHTML={{&#10;                __html: content?.content || `&#10;                  &lt;h2&gt;Trade Shows &amp; Exhibitions&lt;/h2&gt;&#10;                  &lt;p&gt;Southern Fashion &amp; Décor actively participates in major trade shows and exhibitions across Bangladesh and internationally.&lt;/p&gt;&#10;                  &#10;                  &lt;h3&gt;Upcoming Events&lt;/h3&gt;&#10;                  &lt;ul&gt;&#10;                    &lt;li&gt;&lt;strong&gt;Dhaka International Trade Fair 2024:&lt;/strong&gt; January 1-31, 2024&lt;/li&gt;&#10;                    &lt;li&gt;&lt;strong&gt;Bangladesh Home &amp; Lifestyle Expo:&lt;/strong&gt; March 15-18, 2024&lt;/li&gt;&#10;                    &lt;li&gt;&lt;strong&gt;Fashion Week Dhaka:&lt;/strong&gt; April 10-12, 2024&lt;/li&gt;&#10;                    &lt;li&gt;&lt;strong&gt;International Furniture Fair:&lt;/strong&gt; June 5-8, 2024&lt;/li&gt;&#10;                  &lt;/ul&gt;&#10;                  &#10;                  &lt;h3&gt;What to Expect&lt;/h3&gt;&#10;                  &lt;ul&gt;&#10;                    &lt;li&gt;Preview of new collections before market launch&lt;/li&gt;&#10;                    &lt;li&gt;Exclusive trade show discounts and offers&lt;/li&gt;&#10;                    &lt;li&gt;Meet our design team and product experts&lt;/li&gt;&#10;                    &lt;li&gt;Wholesale pricing and bulk order opportunities&lt;/li&gt;&#10;                    &lt;li&gt;Networking with industry professionals&lt;/li&gt;&#10;                  &lt;/ul&gt;&#10;                  &#10;                  &lt;h3&gt;For Retailers &amp; Wholesalers&lt;/h3&gt;&#10;                  &lt;p&gt;Join us at trade shows to explore wholesale opportunities, establish partnerships, and discover our complete product range. Schedule a meeting with our sales team to discuss:&lt;/p&gt;&#10;                  &lt;ul&gt;&#10;                    &lt;li&gt;Wholesale pricing structures&lt;/li&gt;&#10;                    &lt;li&gt;Minimum order quantities&lt;/li&gt;&#10;                    &lt;li&gt;Seasonal collections and pre-orders&lt;/li&gt;&#10;                    &lt;li&gt;Custom design and private labeling&lt;/li&gt;&#10;                  &lt;/ul&gt;&#10;                  &#10;                  &lt;h3&gt;Contact for Trade Shows&lt;/h3&gt;&#10;                  &lt;p&gt;&lt;strong&gt;Trade Relations:&lt;/strong&gt; trade@sfdbd.com&lt;/p&gt;&#10;                  &lt;p&gt;&lt;strong&gt;Phone:&lt;/strong&gt; +880 1711 654321&lt;/p&gt;&#10;                  &#10;                  &lt;h3&gt;Past Participations&lt;/h3&gt;&#10;                  &lt;p&gt;We have successfully participated in numerous trade shows across South Asia, building strong relationships with retailers, wholesalers, and industry partners.&lt;/p&gt;&#10;                `&#10;              }}&#10;            /&gt;&#10;          &lt;/CardContent&gt;&#10;        &lt;/Card&gt;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  )&#10;}&#10;" />
              <option name="updatedContent" value="'use client'&#10;&#10;import FooterPageTemplate from '@/components/FooterPageTemplate'&#10;&#10;export default function TradeShowsPage() {&#10;  const fallbackContent = `&#10;    &lt;h2&gt;Trade Shows &amp; Exhibitions&lt;/h2&gt;&#10;    &lt;p&gt;Southern Fashion &amp; Décor actively participates in major trade shows and exhibitions across Bangladesh and internationally.&lt;/p&gt;&#10;    &#10;    &lt;h3&gt;Upcoming Events&lt;/h3&gt;&#10;    &lt;ul&gt;&#10;      &lt;li&gt;&lt;strong&gt;Dhaka International Trade Fair 2024:&lt;/strong&gt; January 1-31, 2024&lt;/li&gt;&#10;      &lt;li&gt;&lt;strong&gt;Bangladesh Home &amp; Lifestyle Expo:&lt;/strong&gt; March 15-18, 2024&lt;/li&gt;&#10;      &lt;li&gt;&lt;strong&gt;Fashion Week Dhaka:&lt;/strong&gt; April 10-12, 2024&lt;/li&gt;&#10;      &lt;li&gt;&lt;strong&gt;International Furniture Fair:&lt;/strong&gt; June 5-8, 2024&lt;/li&gt;&#10;    &lt;/ul&gt;&#10;    &#10;    &lt;h3&gt;What to Expect&lt;/h3&gt;&#10;    &lt;ul&gt;&#10;      &lt;li&gt;Preview of new collections before market launch&lt;/li&gt;&#10;      &lt;li&gt;Exclusive trade show discounts and offers&lt;/li&gt;&#10;      &lt;li&gt;Meet our design team and product experts&lt;/li&gt;&#10;      &lt;li&gt;Wholesale pricing and bulk order opportunities&lt;/li&gt;&#10;      &lt;li&gt;Networking with industry professionals&lt;/li&gt;&#10;    &lt;/ul&gt;&#10;    &#10;    &lt;h3&gt;For Retailers &amp; Wholesalers&lt;/h3&gt;&#10;    &lt;p&gt;Join us at trade shows to explore wholesale opportunities, establish partnerships, and discover our complete product range. Schedule a meeting with our sales team to discuss:&lt;/p&gt;&#10;    &lt;ul&gt;&#10;      &lt;li&gt;Wholesale pricing structures&lt;/li&gt;&#10;      &lt;li&gt;Minimum order quantities&lt;/li&gt;&#10;      &lt;li&gt;Seasonal collections and pre-orders&lt;/li&gt;&#10;      &lt;li&gt;Custom design and private labeling&lt;/li&gt;&#10;    &lt;/ul&gt;&#10;    &#10;    &lt;h3&gt;Contact for Trade Shows&lt;/h3&gt;&#10;    &lt;p&gt;&lt;strong&gt;Trade Relations:&lt;/strong&gt; trade@sfdbd.com&lt;/p&gt;&#10;    &lt;p&gt;&lt;strong&gt;Phone:&lt;/strong&gt; +880 1711 654321&lt;/p&gt;&#10;    &#10;    &lt;h3&gt;Past Participations&lt;/h3&gt;&#10;    &lt;p&gt;We have successfully participated in numerous trade shows across South Asia, building strong relationships with retailers, wholesalers, and industry partners.&lt;/p&gt;&#10;  `&#10;&#10;  return (&#10;    &lt;FooterPageTemplate &#10;      slug=&quot;trade-shows&quot;&#10;      fallbackTitle=&quot;Trade Shows&quot;&#10;      fallbackContent={fallbackContent}&#10;    /&gt;&#10;  )&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/components/FooterPageTemplate.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/components/FooterPageTemplate.tsx" />
              <option name="originalContent" value="&#10;&#10;" />
              <option name="updatedContent" value="'use client'&#10;&#10;import { useState, useEffect } from 'react'&#10;import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'&#10;import { Button } from '@/components/ui/button'&#10;import { useRouter } from 'next/navigation'&#10;import { ArrowLeft } from 'lucide-react'&#10;&#10;interface FooterPageProps {&#10;  slug: string&#10;  fallbackTitle: string&#10;  fallbackContent: string&#10;}&#10;&#10;export default function FooterPageTemplate({ slug, fallbackTitle, fallbackContent }: FooterPageProps) {&#10;  const router = useRouter()&#10;  const [content, setContent] = useState&lt;any&gt;(null)&#10;  const [loading, setLoading] = useState(true)&#10;&#10;  useEffect(() =&gt; {&#10;    fetchContent()&#10;  }, [slug])&#10;&#10;  const fetchContent = async () =&gt; {&#10;    try {&#10;      const response = await fetch('/api/footer')&#10;      if (response.ok) {&#10;        const data = await response.json()&#10;        const pageContent = data.content.find((item: any) =&gt; item.slug === slug &amp;&amp; item.isActive)&#10;        setContent(pageContent)&#10;      }&#10;    } catch (error) {&#10;      console.error('Error fetching content:', error)&#10;    } finally {&#10;      setLoading(false)&#10;    }&#10;  }&#10;&#10;  if (loading) {&#10;    return (&#10;      &lt;div className=&quot;min-h-screen bg-gray-50 flex items-center justify-center&quot;&gt;&#10;        &lt;div className=&quot;animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600&quot;&gt;&lt;/div&gt;&#10;      &lt;/div&gt;&#10;    )&#10;  }&#10;&#10;  return (&#10;    &lt;div className=&quot;min-h-screen bg-gray-50&quot;&gt;&#10;      &lt;div className=&quot;container mx-auto px-4 py-12&quot;&gt;&#10;        {/* Back Button */}&#10;        &lt;div className=&quot;mb-6&quot;&gt;&#10;          &lt;Button&#10;            variant=&quot;outline&quot;&#10;            onClick={() =&gt; router.back()}&#10;            className=&quot;flex items-center gap-2&quot;&#10;          &gt;&#10;            &lt;ArrowLeft className=&quot;h-4 w-4&quot; /&gt;&#10;            Back&#10;          &lt;/Button&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;Card className=&quot;max-w-4xl mx-auto&quot;&gt;&#10;          &lt;CardHeader&gt;&#10;            &lt;CardTitle className=&quot;text-3xl font-bold text-center&quot;&gt;&#10;              {content?.title || fallbackTitle}&#10;            &lt;/CardTitle&gt;&#10;          &lt;/CardHeader&gt;&#10;          &lt;CardContent className=&quot;prose max-w-none&quot;&gt;&#10;            &lt;div&#10;              dangerouslySetInnerHTML={{&#10;                __html: content?.content || fallbackContent&#10;              }}&#10;            /&gt;&#10;          &lt;/CardContent&gt;&#10;        &lt;/Card&gt;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  )&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/scripts/seed-footer.ts">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/scripts/seed-footer.ts" />
              <option name="originalContent" value="import { PrismaClient } from '@prisma/client'&#10;&#10;const prisma = new PrismaClient()&#10;&#10;async function seedFooterContent() {&#10;  console.log('Seeding footer content...')&#10;&#10;  // Seed Footer Content Pages&#10;  const footerPages = [&#10;    {&#10;      slug: 'contact',&#10;      title: 'Contact Us',&#10;      section: 'help',&#10;      content: `&#10;        &lt;h2&gt;Get in Touch&lt;/h2&gt;&#10;        &lt;p&gt;We'd love to hear from you. Contact us for any questions about our products or services.&lt;/p&gt;&#10;        &#10;        &lt;h3&gt;Contact Information&lt;/h3&gt;&#10;        &lt;p&gt;&lt;strong&gt;Email:&lt;/strong&gt; info@sfdbd.com&lt;/p&gt;&#10;        &lt;p&gt;&lt;strong&gt;Phone:&lt;/strong&gt; +880 1234 567890&lt;/p&gt;&#10;        &lt;p&gt;&lt;strong&gt;Address:&lt;/strong&gt; 123 Fashion Street, Dhaka, Bangladesh&lt;/p&gt;&#10;        &#10;        &lt;h3&gt;Business Hours&lt;/h3&gt;&#10;        &lt;p&gt;Monday - Friday: 9:00 AM - 6:00 PM&lt;/p&gt;&#10;        &lt;p&gt;Saturday: 10:00 AM - 4:00 PM&lt;/p&gt;&#10;        &lt;p&gt;Sunday: Closed&lt;/p&gt;&#10;      `&#10;    },&#10;    {&#10;      slug: 'delivery',&#10;      title: 'Delivery Information',&#10;      section: 'help',&#10;      content: `&#10;        &lt;h2&gt;Delivery &amp; Shipping&lt;/h2&gt;&#10;        &lt;p&gt;We offer reliable delivery services across Bangladesh to get your products to you safely and on time.&lt;/p&gt;&#10;        &#10;        &lt;h3&gt;Delivery Areas&lt;/h3&gt;&#10;        &lt;ul&gt;&#10;          &lt;li&gt;Dhaka City: 1-2 business days&lt;/li&gt;&#10;          &lt;li&gt;Major Cities: 2-3 business days&lt;/li&gt;&#10;          &lt;li&gt;Other Areas: 3-5 business days&lt;/li&gt;&#10;        &lt;/ul&gt;&#10;        &#10;        &lt;h3&gt;Delivery Charges&lt;/h3&gt;&#10;        &lt;ul&gt;&#10;          &lt;li&gt;Inside Dhaka: 80 BDT&lt;/li&gt;&#10;          &lt;li&gt;Outside Dhaka: 120 BDT&lt;/li&gt;&#10;          &lt;li&gt;Free delivery on orders above 2000 BDT&lt;/li&gt;&#10;        &lt;/ul&gt;&#10;      `&#10;    },&#10;    {&#10;      slug: 'terms',&#10;      title: 'Terms &amp; Conditions',&#10;      section: 'help',&#10;      content: `&#10;        &lt;h2&gt;Terms and Conditions&lt;/h2&gt;&#10;        &lt;p&gt;Welcome to Southern Fashion &amp; Décor. These terms and conditions outline the rules and regulations for the use of our website and services.&lt;/p&gt;&#10;        &#10;        &lt;h3&gt;1. Acceptance of Terms&lt;/h3&gt;&#10;        &lt;p&gt;By accessing and using this website, you accept and agree to be bound by the terms and provision of this agreement.&lt;/p&gt;&#10;        &#10;        &lt;h3&gt;2. Product Information&lt;/h3&gt;&#10;        &lt;p&gt;We strive to provide accurate product descriptions and images. However, slight variations in color and design may occur due to photographic lighting and monitor settings.&lt;/p&gt;&#10;      `&#10;    },&#10;    {&#10;      slug: 'privacy',&#10;      title: 'Privacy Policy',&#10;      section: 'help',&#10;      content: `&#10;        &lt;h2&gt;Privacy Policy&lt;/h2&gt;&#10;        &lt;p&gt;At Southern Fashion &amp; Décor, we are committed to protecting your privacy and ensuring the security of your personal information.&lt;/p&gt;&#10;        &#10;        &lt;h3&gt;Information We Collect&lt;/h3&gt;&#10;        &lt;ul&gt;&#10;          &lt;li&gt;Personal identification information (Name, email address, phone number)&lt;/li&gt;&#10;          &lt;li&gt;Billing and shipping addresses&lt;/li&gt;&#10;          &lt;li&gt;Payment information (processed securely through our payment partners)&lt;/li&gt;&#10;        &lt;/ul&gt;&#10;      `&#10;    },&#10;    {&#10;      slug: 'faq',&#10;      title: 'Frequently Asked Questions',&#10;      section: 'help',&#10;      content: `&#10;        &lt;h2&gt;Frequently Asked Questions&lt;/h2&gt;&#10;        &lt;h3&gt;How do I place an order?&lt;/h3&gt;&#10;        &lt;p&gt;You can place an order by browsing our products, adding items to your cart, and proceeding to checkout.&lt;/p&gt;&#10;        &#10;        &lt;h3&gt;What payment methods do you accept?&lt;/h3&gt;&#10;        &lt;p&gt;We accept Visa, Mastercard, and cash on delivery for orders within Bangladesh.&lt;/p&gt;&#10;      `&#10;    },&#10;    {&#10;      slug: 'shipping',&#10;      title: 'BD Shipping',&#10;      section: 'help',&#10;      content: `&#10;        &lt;h2&gt;Bangladesh Shipping Information&lt;/h2&gt;&#10;        &lt;p&gt;We provide reliable shipping services across Bangladesh through our trusted courier partners.&lt;/p&gt;&#10;        &#10;        &lt;h3&gt;Shipping Areas&lt;/h3&gt;&#10;        &lt;ul&gt;&#10;          &lt;li&gt;&lt;strong&gt;Dhaka Metro:&lt;/strong&gt; Same day or next day delivery&lt;/li&gt;&#10;          &lt;li&gt;&lt;strong&gt;Major Cities:&lt;/strong&gt; Chittagong, Sylhet, Rajshahi, Khulna, Barisal, Rangpur&lt;/li&gt;&#10;        &lt;/ul&gt;&#10;      `&#10;    },&#10;    {&#10;      slug: 'about',&#10;      title: 'Our Story',&#10;      section: 'about',&#10;      content: `&#10;        &lt;h2&gt;About Southern Fashion &amp; Décor&lt;/h2&gt;&#10;        &lt;p&gt;Welcome to Southern Fashion &amp; Décor, your premier destination for exquisite fashion and home décor items in Bangladesh.&lt;/p&gt;&#10;        &#10;        &lt;h3&gt;Our Journey&lt;/h3&gt;&#10;        &lt;p&gt;Founded with a passion for bringing beautiful, high-quality products to Bangladesh, Southern Fashion &amp; Décor has been serving customers since our inception.&lt;/p&gt;&#10;      `&#10;    },&#10;    {&#10;      slug: 'showroom',&#10;      title: 'Visit Our Showroom',&#10;      section: 'about',&#10;      content: `&#10;        &lt;h2&gt;Southern Fashion &amp; Décor Showroom&lt;/h2&gt;&#10;        &lt;p&gt;Experience our complete collection in person at our beautiful showroom in Dhaka.&lt;/p&gt;&#10;        &#10;        &lt;h3&gt;Showroom Location&lt;/h3&gt;&#10;        &lt;p&gt;&lt;strong&gt;Address:&lt;/strong&gt; House #123, Road #15, Block C, Bashundhara R/A, Dhaka-1229&lt;/p&gt;&#10;        &lt;p&gt;&lt;strong&gt;Phone:&lt;/strong&gt; +880 1711 123456&lt;/p&gt;&#10;      `&#10;    }&#10;  ]&#10;&#10;  // Seed Social Links&#10;  const socialLinks = [&#10;    {&#10;      platform: 'facebook',&#10;      url: 'https://facebook.com/sfdbd',&#10;      icon: 'f'&#10;    },&#10;    {&#10;      platform: 'instagram',&#10;      url: 'https://instagram.com/sfdbd',&#10;      icon: 'i'&#10;    },&#10;    {&#10;      platform: 'twitter',&#10;      url: 'https://twitter.com/sfdbd',&#10;      icon: 't'&#10;    }&#10;  ]&#10;&#10;  // Seed Payment Methods&#10;  const paymentMethods = [&#10;    {&#10;      name: 'Visa',&#10;      image: null // Will be uploaded via admin&#10;    },&#10;    {&#10;      name: 'Mastercard',&#10;      image: null&#10;    },&#10;    {&#10;      name: 'bKash',&#10;      image: null&#10;    }&#10;  ]&#10;&#10;  try {&#10;    // Create footer content&#10;    for (const page of footerPages) {&#10;      await prisma.footerContent.upsert({&#10;        where: { slug: page.slug },&#10;        update: page,&#10;        create: page&#10;      })&#10;    }&#10;&#10;    // Create social links&#10;    for (const social of socialLinks) {&#10;      const existing = await prisma.socialLink.findFirst({&#10;        where: { platform: social.platform }&#10;      })&#10;&#10;      if (!existing) {&#10;        await prisma.socialLink.create({&#10;          data: social&#10;        })&#10;      }&#10;    }&#10;&#10;    // Create payment methods&#10;    for (const payment of paymentMethods) {&#10;      const existing = await prisma.paymentMethod.findFirst({&#10;        where: { name: payment.name }&#10;      })&#10;&#10;      if (!existing) {&#10;        await prisma.paymentMethod.create({&#10;          data: payment&#10;        })&#10;      }&#10;    }&#10;&#10;    console.log('Footer content seeded successfully!')&#10;  } catch (error) {&#10;    console.error('Error seeding footer content:', error)&#10;  }&#10;}&#10;&#10;seedFooterContent()&#10;  .catch((e) =&gt; {&#10;    console.error(e)&#10;    process.exit(1)&#10;  })&#10;  .finally(async () =&gt; {&#10;    await prisma.$disconnect()&#10;  })&#10;" />
              <option name="updatedContent" value="import { PrismaClient } from '@prisma/client'&#10;&#10;const prisma = new PrismaClient()&#10;&#10;async function seedFooterContent() {&#10;  console.log('Seeding footer content...')&#10;&#10;  // Seed Footer Content Pages&#10;  const footerPages = [&#10;    {&#10;      slug: 'contact',&#10;      title: 'Contact Us',&#10;      section: 'help',&#10;      content: `&#10;        &lt;h2&gt;Get in Touch&lt;/h2&gt;&#10;        &lt;p&gt;We'd love to hear from you. Contact us for any questions about our products or services.&lt;/p&gt;&#10;        &#10;        &lt;h3&gt;Contact Information&lt;/h3&gt;&#10;        &lt;p&gt;&lt;strong&gt;Email:&lt;/strong&gt; info@sfdbd.com&lt;/p&gt;&#10;        &lt;p&gt;&lt;strong&gt;Phone:&lt;/strong&gt; +880 1234 567890&lt;/p&gt;&#10;        &lt;p&gt;&lt;strong&gt;Address:&lt;/strong&gt; 123 Fashion Street, Dhaka, Bangladesh&lt;/p&gt;&#10;        &#10;        &lt;h3&gt;Business Hours&lt;/h3&gt;&#10;        &lt;p&gt;Monday - Friday: 9:00 AM - 6:00 PM&lt;/p&gt;&#10;        &lt;p&gt;Saturday: 10:00 AM - 4:00 PM&lt;/p&gt;&#10;        &lt;p&gt;Sunday: Closed&lt;/p&gt;&#10;      `&#10;    },&#10;    {&#10;      slug: 'delivery',&#10;      title: 'Delivery Information',&#10;      section: 'help',&#10;      content: `&#10;        &lt;h2&gt;Delivery &amp; Shipping&lt;/h2&gt;&#10;        &lt;p&gt;We offer reliable delivery services across Bangladesh to get your products to you safely and on time.&lt;/p&gt;&#10;        &#10;        &lt;h3&gt;Delivery Areas&lt;/h3&gt;&#10;        &lt;ul&gt;&#10;          &lt;li&gt;Dhaka City: 1-2 business days&lt;/li&gt;&#10;          &lt;li&gt;Major Cities: 2-3 business days&lt;/li&gt;&#10;          &lt;li&gt;Other Areas: 3-5 business days&lt;/li&gt;&#10;        &lt;/ul&gt;&#10;        &#10;        &lt;h3&gt;Delivery Charges&lt;/h3&gt;&#10;        &lt;ul&gt;&#10;          &lt;li&gt;Inside Dhaka: 80 BDT&lt;/li&gt;&#10;          &lt;li&gt;Outside Dhaka: 120 BDT&lt;/li&gt;&#10;          &lt;li&gt;Free delivery on orders above 2000 BDT&lt;/li&gt;&#10;        &lt;/ul&gt;&#10;      `&#10;    },&#10;    {&#10;      slug: 'terms',&#10;      title: 'Terms &amp; Conditions',&#10;      section: 'help',&#10;      content: `&#10;        &lt;h2&gt;Terms and Conditions&lt;/h2&gt;&#10;        &lt;p&gt;Welcome to Southern Fashion &amp; Décor. These terms and conditions outline the rules and regulations for the use of our website and services.&lt;/p&gt;&#10;        &#10;        &lt;h3&gt;1. Acceptance of Terms&lt;/h3&gt;&#10;        &lt;p&gt;By accessing and using this website, you accept and agree to be bound by the terms and provision of this agreement.&lt;/p&gt;&#10;        &#10;        &lt;h3&gt;2. Product Information&lt;/h3&gt;&#10;        &lt;p&gt;We strive to provide accurate product descriptions and images. However, slight variations in color and design may occur due to photographic lighting and monitor settings.&lt;/p&gt;&#10;      `&#10;    },&#10;    {&#10;      slug: 'privacy',&#10;      title: 'Privacy Policy',&#10;      section: 'help',&#10;      content: `&#10;        &lt;h2&gt;Privacy Policy&lt;/h2&gt;&#10;        &lt;p&gt;At Southern Fashion &amp; Décor, we are committed to protecting your privacy and ensuring the security of your personal information.&lt;/p&gt;&#10;        &#10;        &lt;h3&gt;Information We Collect&lt;/h3&gt;&#10;        &lt;ul&gt;&#10;          &lt;li&gt;Personal identification information (Name, email address, phone number)&lt;/li&gt;&#10;          &lt;li&gt;Billing and shipping addresses&lt;/li&gt;&#10;          &lt;li&gt;Payment information (processed securely through our payment partners)&lt;/li&gt;&#10;        &lt;/ul&gt;&#10;      `&#10;    },&#10;    {&#10;      slug: 'faq',&#10;      title: 'Frequently Asked Questions',&#10;      section: 'help',&#10;      content: `&#10;        &lt;h2&gt;Frequently Asked Questions&lt;/h2&gt;&#10;        &lt;h3&gt;How do I place an order?&lt;/h3&gt;&#10;        &lt;p&gt;You can place an order by browsing our products, adding items to your cart, and proceeding to checkout.&lt;/p&gt;&#10;        &#10;        &lt;h3&gt;What payment methods do you accept?&lt;/h3&gt;&#10;        &lt;p&gt;We accept Visa, Mastercard, and cash on delivery for orders within Bangladesh.&lt;/p&gt;&#10;      `&#10;    },&#10;    {&#10;      slug: 'shipping',&#10;      title: 'BD Shipping',&#10;      section: 'help',&#10;      content: `&#10;        &lt;h2&gt;Bangladesh Shipping Information&lt;/h2&gt;&#10;        &lt;p&gt;We provide reliable shipping services across Bangladesh through our trusted courier partners.&lt;/p&gt;&#10;        &#10;        &lt;h3&gt;Shipping Areas&lt;/h3&gt;&#10;        &lt;ul&gt;&#10;          &lt;li&gt;&lt;strong&gt;Dhaka Metro:&lt;/strong&gt; Same day or next day delivery&lt;/li&gt;&#10;          &lt;li&gt;&lt;strong&gt;Major Cities:&lt;/strong&gt; Chittagong, Sylhet, Rajshahi, Khulna, Barisal, Rangpur&lt;/li&gt;&#10;        &lt;/ul&gt;&#10;      `&#10;    },&#10;    {&#10;      slug: 'about',&#10;      title: 'Our Story',&#10;      section: 'about',&#10;      content: `&#10;        &lt;h2&gt;About Southern Fashion &amp; Décor&lt;/h2&gt;&#10;        &lt;p&gt;Welcome to Southern Fashion &amp; Décor, your premier destination for exquisite fashion and home décor items in Bangladesh.&lt;/p&gt;&#10;        &#10;        &lt;h3&gt;Our Journey&lt;/h3&gt;&#10;        &lt;p&gt;Founded with a passion for bringing beautiful, high-quality products to Bangladesh, Southern Fashion &amp; Décor has been serving customers since our inception.&lt;/p&gt;&#10;      `&#10;    },&#10;    {&#10;      slug: 'showroom',&#10;      title: 'Visit Our Showroom',&#10;      section: 'about',&#10;      content: `&#10;        &lt;h2&gt;Southern Fashion &amp; Décor Showroom&lt;/h2&gt;&#10;        &lt;p&gt;Experience our complete collection in person at our beautiful showroom in Dhaka.&lt;/p&gt;&#10;        &#10;        &lt;h3&gt;Showroom Location&lt;/h3&gt;&#10;        &lt;p&gt;&lt;strong&gt;Address:&lt;/strong&gt; House #123, Road #15, Block C, Bashundhara R/A, Dhaka-1229&lt;/p&gt;&#10;        &lt;p&gt;&lt;strong&gt;Phone:&lt;/strong&gt; +880 1711 123456&lt;/p&gt;&#10;      `&#10;    },&#10;    {&#10;      slug: 'lookbook',&#10;      title: 'Lookbook',&#10;      section: 'about',&#10;      content: `&#10;        &lt;h2&gt;Southern Fashion &amp; Décor Lookbook&lt;/h2&gt;&#10;        &lt;p&gt;Discover the latest trends and styling inspiration from our curated collections.&lt;/p&gt;&#10;        &#10;        &lt;h3&gt;Fashion Lookbook&lt;/h3&gt;&#10;        &lt;p&gt;Explore our seasonal fashion collections featuring the latest trends in clothing, accessories, and footwear.&lt;/p&gt;&#10;        &#10;        &lt;h3&gt;Home Décor Inspiration&lt;/h3&gt;&#10;        &lt;p&gt;Get inspired with our home décor lookbook featuring beautifully styled spaces using our furniture and decorative items.&lt;/p&gt;&#10;      `&#10;    },&#10;    {&#10;      slug: 'trade-shows',&#10;      title: 'Trade Shows',&#10;      section: 'about',&#10;      content: `&#10;        &lt;h2&gt;Trade Shows &amp; Exhibitions&lt;/h2&gt;&#10;        &lt;p&gt;Southern Fashion &amp; Décor actively participates in major trade shows and exhibitions across Bangladesh and internationally.&lt;/p&gt;&#10;        &#10;        &lt;h3&gt;Upcoming Events&lt;/h3&gt;&#10;        &lt;ul&gt;&#10;          &lt;li&gt;&lt;strong&gt;Dhaka International Trade Fair 2024:&lt;/strong&gt; January 1-31, 2024&lt;/li&gt;&#10;          &lt;li&gt;&lt;strong&gt;Bangladesh Home &amp; Lifestyle Expo:&lt;/strong&gt; March 15-18, 2024&lt;/li&gt;&#10;        &lt;/ul&gt;&#10;      `&#10;    },&#10;    {&#10;      slug: 'ethics',&#10;      title: 'Ethical Policy',&#10;      section: 'about',&#10;      content: `&#10;        &lt;h2&gt;Our Ethical Commitments&lt;/h2&gt;&#10;        &lt;p&gt;Southern Fashion &amp; Décor is committed to conducting business ethically and responsibly across all aspects of our operations.&lt;/p&gt;&#10;        &#10;        &lt;h3&gt;Fair Labor Practices&lt;/h3&gt;&#10;        &lt;ul&gt;&#10;          &lt;li&gt;Ensuring fair wages and safe working conditions for all workers&lt;/li&gt;&#10;          &lt;li&gt;Zero tolerance for child labor or forced labor&lt;/li&gt;&#10;        &lt;/ul&gt;&#10;      `&#10;    },&#10;    {&#10;      slug: 'sustainability',&#10;      title: 'Sustainability Mission',&#10;      section: 'about',&#10;      content: `&#10;        &lt;h2&gt;Our Sustainability Mission&lt;/h2&gt;&#10;        &lt;p&gt;At Southern Fashion &amp; Décor, we are committed to building a sustainable future through responsible business practices and environmental stewardship.&lt;/p&gt;&#10;        &#10;        &lt;h3&gt;Sustainable Materials&lt;/h3&gt;&#10;        &lt;ul&gt;&#10;          &lt;li&gt;Prioritizing eco-friendly and renewable materials&lt;/li&gt;&#10;          &lt;li&gt;Using organic cotton and sustainable fabrics&lt;/li&gt;&#10;        &lt;/ul&gt;&#10;      `&#10;    }&#10;  ]&#10;&#10;  // Seed Social Links&#10;  const socialLinks = [&#10;    {&#10;      platform: 'facebook',&#10;      url: 'https://facebook.com/sfdbd',&#10;      icon: 'f'&#10;    },&#10;    {&#10;      platform: 'instagram',&#10;      url: 'https://instagram.com/sfdbd',&#10;      icon: 'i'&#10;    },&#10;    {&#10;      platform: 'twitter',&#10;      url: 'https://twitter.com/sfdbd',&#10;      icon: 't'&#10;    }&#10;  ]&#10;&#10;  // Seed Payment Methods&#10;  const paymentMethods = [&#10;    {&#10;      name: 'Visa',&#10;      image: null // Will be uploaded via admin&#10;    },&#10;    {&#10;      name: 'Mastercard',&#10;      image: null&#10;    },&#10;    {&#10;      name: 'bKash',&#10;      image: null&#10;    }&#10;  ]&#10;&#10;  try {&#10;    // Create footer content&#10;    for (const page of footerPages) {&#10;      await prisma.footerContent.upsert({&#10;        where: { slug: page.slug },&#10;        update: page,&#10;        create: page&#10;      })&#10;    }&#10;&#10;    // Create social links&#10;    for (const social of socialLinks) {&#10;      const existing = await prisma.socialLink.findFirst({&#10;        where: { platform: social.platform }&#10;      })&#10;&#10;      if (!existing) {&#10;        await prisma.socialLink.create({&#10;          data: social&#10;        })&#10;      }&#10;    }&#10;&#10;    // Create payment methods&#10;    for (const payment of paymentMethods) {&#10;      const existing = await prisma.paymentMethod.findFirst({&#10;        where: { name: payment.name }&#10;      })&#10;&#10;      if (!existing) {&#10;        await prisma.paymentMethod.create({&#10;          data: payment&#10;        })&#10;      }&#10;    }&#10;&#10;    console.log('Footer content seeded successfully!')&#10;  } catch (error) {&#10;    console.error('Error seeding footer content:', error)&#10;  }&#10;}&#10;&#10;seedFooterContent()&#10;  .catch((e) =&gt; {&#10;    console.error(e)&#10;    process.exit(1)&#10;  })&#10;  .finally(async () =&gt; {&#10;    await prisma.$disconnect()&#10;  })" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>